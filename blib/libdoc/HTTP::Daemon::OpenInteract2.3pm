.\" Automatically generated by Pod::Man 2.1801 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "HTTP::Daemon::OpenInteract2 3"
.TH HTTP::Daemon::OpenInteract2 3 "2010-06-17" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
HTTP::Daemon::OpenInteract2 \- Standalone HTTP daemon for OpenInteract 2
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\& my $daemon = HTTP::Daemon::OpenInteract2\->new(
\&                  { website_dir => $website_dir });
\& print "OpenInteract2 now running at URL \*(Aq", $daemon\->url, "\*(Aq\en";
\& 
\& while (1) {
\&     my $client = $daemon\->accept;
\&     next unless ( $client );
\&     my $child = fork();
\&     unless ( defined $child ) {
\&         die "Cannot fork child: $!\en";
\&     }
\&     if ( $child == 0 ) {
\&         $daemon\->interact( $client );
\&         $daemon\->close;
\&         exit(0);
\&     }
\&     $client\->close();
\& }
\& $daemon\->run;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module uses HTTP::Daemon to implement a
standalone web server running OpenInteract 2. Once it's started you
shouldn't be able to tell the difference between its OpenInteract or
the same application running on Apache, Apache2, or \s-1CGI\s0 \*(-- it will
have the same users, hit the same database, manipulate the same
packages, etc.
.PP
The daemon will respect the application deployment context if
specified in the server configuration. Any request outside the context
will generate a simple error page explaining that it cannot be served.
.PP
\&\fBPerformance note\fR: this daemon will not win any speed contests. It
will work fine for a handful of users, but if you are seriously
deploying an application you should look strongly at Apache and
mod_perl.
.SH "CONFIGURATION"
.IX Header "CONFIGURATION"
The configuration file is a simple \s-1INI\s0 file. Here's an example:
.PP
.Vb 4
\&  [socket]
\&  LocalAddr = localhost 
\&  LocalPort = 8080      
\&  Proto     = tcp       
\& 
\&  [content]     
\&  static_path = ^/images
\&  static_path = \e.(css|pdf|gz|zip|jpg|gif|png)$
.Ve
.PP
The entries under 'socket' are passed without modification to the
constructor for HTTP::Daemon, so if you have
specialized needs related to the network consult that documentation.
.PP
Currently only one item is supported in 'content': 'static_path'. Each
declaration tells the daemon that if the request \s-1URL\s0 matches the
regular expression to serve the file under the website \s-1HTML\s0 directory
directly rather than hitting OpenInteract2. For instance, in the given
configuration the requested path: \f(CW\*(C`/images/oi_logo.gif\*(C'\fR will cause
the daemon to look for the file:
.PP
.Vb 1
\&  /path/to/mysite/html/images/oi_logo.gif
.Ve
.PP
and serve it as-is to the client. If the file is not found the client
gets a standard 404 message. If the file is found its content type is
determined by the routines in OpenInteract2::File.
.PP
If you define a deployment context (e.g., '/intranet') you may need to
modify entries under 'static_path' to match. So if we deployed this
application under '/intranet' you would need to change the static path
\&'^/images' to '^/intranet/images'. keep the static path as '/images'.
.PP
You can have as many static path declarations as needed.
.SS "Tracking Running Server"
.IX Subsection "Tracking Running Server"
The parent server stores its process \s-1ID\s0 (pid) in a file at
startup. This file is called \f(CW\*(C`oi2.pid\*(C'\fR and is stored in the same
directory where the daemon configuration file is kept. You can also
access the filename from the daemon object (\f(CW\*(C`pid_file\*(C'\fR) as well as
the pid (\f(CW\*(C`pid\*(C'\fR).
.SH "SEE ALSO"
.IX Header "SEE ALSO"
HTTP::Daemon
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2002\-2005 Chris Winters. All rights reserved.
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "AUTHORS"
.IX Header "AUTHORS"
Chris Winters <chris@cwinters.com>
