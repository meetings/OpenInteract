.\" Automatically generated by Pod::Man 2.1801 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "OpenInteract2::Manual::Changes 3"
.TH OpenInteract2::Manual::Changes 3 "2010-06-17" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
OpenInteract2::Manual::Changes \- Significant changes to OpenInteract2
.SH "NOTE"
.IX Header "NOTE"
Each package maintains its own changelog. These changes are not
mentioned here except to note the package version changes with
successive \s-1OI2\s0 releases.
.PP
Also: items marked with 'OIN\-\ed+' are references to the \s-1JIRA\s0 issue
tracking system at:
.PP
.Vb 1
\&  http://jira.openinteract.org/
.Ve
.PP
You can see the history for a particular issue like this:
.PP
.Vb 1
\&  http://jira.openinteract.org/browse/OIN\-34
.Ve
.SH "THE FUTURE"
.IX Header "THE FUTURE"
\&\s-1OI2\s0 is currently at 1.99_06, equivalent to 2.0 beta 6. The next
release should be a release candidate (1.99_07/2.0 \s-1RC1\s0) \*(-- its new
features should only be minor; everything else should be bugfixes or
pushed off to 2.01.
.SH "1.99_06 (2.0 beta 6), 18 March 2005"
.IX Header "1.99_06 (2.0 beta 6), 18 March 2005"
.SS "Upgrade Notes"
.IX Subsection "Upgrade Notes"
The following all apply to an existing server configuration \*(-- if
you're creating a new site you don't need to worry.
.IP "1." 4
Modify how two 'action_info' keys are set:
.Sp
.Vb 1
\& OLD:
\& 
\& [action_info none]
\& redir = page
\& 
\& [action_info not_found]
\& redir = page
\& 
\& NEW:
\& 
\& [action_info]
\& none      = page
\& not_found = page
.Ve
.IP "2." 4
Optional \- add the following server keys:
.Sp
.Vb 3
\& [login]
\& ...
\& initial_login_expires = 24h
.Ve
.IP "3." 4
In your \f(CW\*(C`$WEBSITE_DIR/conf/startup.pl\*(C'\fR change the following:
.Sp
.Vb 3
\&  use OpenInteract2::Config::Base;
\&    to
\&  use OpenInteract2::Config::Bootstrap;
\&
\&  my $BASE_CONFIG_FILE = \*(Aq$WEBSITE_DIR/conf/base.conf\*(Aq;
\&    to
\&  my $BASE_CONFIG_FILE = \*(Aq$WEBSITE_DIR/conf/bootstrap.ini\*(Aq;
\&
\&  my $base_config = OpenInteract2::Config::Base\->new({ 
\&      filename => $BASE_CONFIG_FILE }); 
\&    to
\&  my $base_config = OpenInteract2::Config::Bootstrap\->new({ 
\&      filename => $BASE_CONFIG_FILE });
.Ve
.SS "Major Changes"
.IX Subsection "Major Changes"
.IP "\(bu" 4
\&\s-1OIN\-129\s0 \- Be able to create a simple application with Create, Remove,
Update, Display and Search functionality based on a database table \*(--
see OpenInteract2::Manage::Package::CreatePackageFromTable, or run:
.Sp
.Vb 1
\&  oi2_manage task_info \-\-task=easy_app
.Ve
.IP "\(bu" 4
\&\s-1OIN\-121\s0 \- You can now create an \s-1OI2\s0 website or package without an
external 'source_dir' \*(-- all our resources are held as data in class
files under OpenInteract2::Brick, and the parent class has methods
to write these resources to the filesystem after an optional initial
evaluation.
.Sp
Core package files, previously included as .zip files, are now stored
as bricks using Base64 encoding.
.IP "\(bu" 4
\&\s-1OIN\-72\s0 \- OpenInteract2 packages can now be built into
CPAN-distributable applications.
.IP "\(bu" 4
\&\s-1OIN\-141:\s0 Create little objects and an organizer to figure out which
OI2::Action object to run based on the \s-1URL\s0 (or whatever). This allows
very simple customization so you can create your own URL-to-action
mappings. See OpenInteract2::ActionResolver for more.
.IP "\(bu" 4
\&\s-1OIN\-115\s0 \- Break OpenInteract2::Setup into individual tasks and
create a framework so that new setup tasks will get discovered at
runtime. We get a name from each task and its dependencies and
determine the order they should be run. This also allows very simple
customization so you can initialize custom services at server startup.
See OpenInteract2::Setup for more information.
.IP "\(bu" 4
\&\s-1OIN\-54\s0 \- Make configuration of your database easier; it's now about as
simple as a \s-1DBI\-\s0>\fIconnect()\fR call...
.IP "\(bu" 4
\&\s-1OIN\-136\s0 and \s-1OIN\-137:\s0 replace 'base.conf' with 'bootstrap.ini' and
\&'package.conf' with 'package.ini'. \s-1INI\s0 is not only \s-1OI2\s0's preferred
configuration format, it's the \fBonly\fR configuration format. Sites
using 'base.conf' have to upgrade \*(-- a 15\-second job \*(-- as do packages
using 'package.conf', but there's a script 'translate_package_to_ini'
in the 'script/' directory to help with the latter.
.IP "\(bu" 4
\&\s-1OIN\-135:\s0 \s-1OI2\s0 can now parse additional \s-1URL\s0 parameters (aka, \s-1REST\s0
parameters) into action parameters. So you can use something like:
.Sp
.Vb 1
\&  http://www.foo.com/news/display/39
.Ve
.Sp
instead of:
.Sp
.Vb 1
\&  http://www.foo.com/news/display/?news_id=39
.Ve
.Sp
or:
.Sp
.Vb 1
\&  http://www.foo.com/news/archive/2005/03
.Ve
.Sp
instead of:
.Sp
.Vb 1
\&  http://www.foo.com/news/archive/?year=2005&month=03
.Ve
.Sp
Further, mapping of \s-1REST\s0 param to action param is done through
configuration \*(-- see property 'url_additional' under
OpenInteract2::Action.
.IP "\(bu" 4
Add initial support for FastCGI \*(-- use /cgi\-bin/oi2.fcgi and see
conf/httpd_cgi_solo.conf for tiny configuration change.
.IP "\(bu" 4
\&\s-1OIN\-35:\s0 Severe errors are now written to the filesystem rather than
the database, and the error browser (in \f(CW\*(C`base_error\*(C'\fR package) was
totally rewritten.
.IP "\(bu" 4
\&\s-1OIN\-143:\s0 Read localization messages from \s-1PO/MO\s0 files in addition to
our custom format.
.SS "Minor Changes"
.IX Subsection "Minor Changes"
See all the \s-1JIRA\s0 issues raised during this release just in case we
missed some:
.PP
<http://jira.openinteract.org/secure/ReleaseNote.jspa?projectId=10010&styleName=Html&version=10036>
.PP
OpenInteract2::Action
.IP "\(bu" 4
Use new OpenInteract2::ParamContainer for \f(CW\*(C`param()\*(C'\fR and related
methods.
.PP
OpenInteract2::Action::CommonSearch
.IP "\(bu" 4
\&\s-1OIN\-122:\s0 Set 'total_hits', 'total_pages' and 'page_num' even if you're
not using paged search results.
.PP
OpenInteract2::Action::CommonUpdate
.IP "\(bu" 4
Pass \f(CW$object\fR and \f(CW\*(C`\e%old_data\*(C'\fR to \f(CW\*(C`_update_post_action()\*(C'\fR callback
rather than forcing the user to get them from parameters.
.PP
OpenInteract2::ActionResolver
.PP
OpenInteract2::ActionResolver::NameAndTask
.PP
OpenInteract2::ActionResolver::NotFoundOrEmpty
.PP
OpenInteract2::ActionResolver::UserDir
.IP "\(bu" 4
\&\s-1OIN\-141:\s0 Break down the process of matching a \s-1URL\s0 (or other
identifier) with the action object that generates its content. The
parent class instantiates all classes under its namespace into a chain
of responsibility. Each link looks at the \s-1URL\s0 (or other data) and
decides if it should create an action from it; if not the next link is
invoked.
.PP
OpenInteract2::App
.IP "\(bu" 4
\&\s-1OIN\-72:\s0 Added base class for package classes to do installation and
report other metdata about the package. (Part of making them
CPAN-installable.)
.PP
OpenInteract2::Config
.IP "\(bu" 4
Add \f(CW\*(C`author_names()\*(C'\fR and \f(CW\*(C`author_emails()\*(C'\fR to pull the names and
emails from the 'author' key.
.PP
OpenInteract2::Context
.IP "\(bu" 4
\&\s-1OIN\-26:\s0 Add \f(CW\*(C`language_handle()\*(C'\fR method, useful for when we don't have
a request available from which to pull the language handle. (See
OpenInteract2::I18N for what this means.)
.IP "\(bu" 4
\&\s-1OIN\-54:\s0 Add \f(CW\*(C`assign_datasource_config()\*(C'\fR so you can create/modify
datasource configurations after the initial configuration.
.IP "\(bu" 4
Add 'last_day_of_month' as option for \f(CW\*(C`create_date()\*(C'\fR
.PP
OpenInteract2::CreateSecurity
.IP "\(bu" 4
\&\s-1OIN\-140:\s0 Move class from base_security package; modify it to create
action security.
.PP
OpenInteract2::I18N::Initializer
.IP "\(bu" 4
\&\s-1OIN\-143:\s0 Using Locale::Maketext::Lexicon, read localization keys
from gettext (\s-1PO/MO\s0) files in addition to our custom format. A package
does not have to standardize on a format and can have messages in
multiple formats.
.PP
OpenInteract2::Manage
.IP "\(bu" 4
Use OpenInteract2::ParamContainer for \f(CW\*(C`param()\*(C'\fR and related methods.
.PP
OpenInteract2::Manage::Package::Export
.Sp
.RS 4
\&\s-1OIN\-111:\s0 Ensure that every package we try to export gets a useful
error message if the export fails.
.RE
.PP
OpenInteract2::Manage::Website::CleanOrphanedUsers
.IP "\(bu" 4
\&\s-1OIN\-91:\s0 New management task to remove all users whose 'removal_date'
has passed. This means they've registered for an account but haven't
logged in.
.PP
OpenInteract2::Manage::Website::Create
.Sp
.RS 4
\&\s-1OIN\-127:\s0 Allow installation of a website into an existing directory,
but first check whether the directory holds any of our expected
subdirectories. If it does we assume we're installing over another
site and die.
.RE
.PP
OpenInteract2::Manage::Website::CreateSecurity
.PP
OpenInteract2::Manage::Website::CreateSecurityForAction
.PP
OpenInteract2::Manage::Website::CreateSecurityForSPOPS
.IP "\(bu" 4
\&\s-1OIN\-140:\s0 Create a new management task to assign security to an action;
consolidate common security creation code into parent task.
.PP
OpenInteract2::Manage::Website::InstallPackageStructure
.Sp
.RS 4
\&\s-1OIN\-134:\s0 Add 'file' parameter to pass to modified
OpenInteract2::SQLInstall \f(CW\*(C`install_structure()\*(C'\fR.
.RE
.PP
OpenInteract2::Package
.IP "\(bu" 4
\&\s-1OIN\-117:\s0 When installing a package to a website copy the package
configuration files to \f(CW\*(C`$WEBSITE_DIR/conf/$PACKAGE\*(C'\fR. This becomes the
permanent home for configuration and package upgrades \fB\s-1WILL\s0 \s-1NOT\s0\fR
overwrite these files. If the upgraded configuration files are
different they're copied to an 'updates/' subdirectory and identified
with the package version they came from.
.IP "\(bu" 4
\&\s-1OIN\-102:\s0 Ensure that if any modules declared in the package.conf fail
we don't read in any perl modules. The errors found when bringing in
the module with a bad 'use' are confusing.
.IP "\(bu" 4
\&\s-1OIN\-105:\s0 Add check to package validation to ensure that all message
files are formatted so we can extract a language from them.
.IP "\(bu" 4
Add simple method \f(CW\*(C`name_as_class()\*(C'\fR to display the package name with
a leading uppercase letter and camel-case internally.
.IP "\(bu" 4
Add method \f(CW\*(C`copy_contents_to()\*(C'\fR for copying the contents of a package
to a directory, reporting what files it copied and what files were not
because they were identical.
.IP "\(bu" 4
\&\s-1OIN\-72:\s0 Remove method \f(CW\*(C`get_doc_files()\*(C'\fR since we're moving
doc/$package.pod to OI2::App::$Package
.PP
OpenInteract2::ParamContainer
.IP "\(bu" 4
Add simple class to provide storage and manipulation of arbitrary
parameters. (Previously four separate classes had implementations of a
\&'param' method...)
.PP
OpenInteract2::Request
.IP "\(bu" 4
\&\s-1OIN\-141:\s0 Move \s-1URL\s0 parsing into action/task to
OpenInteract2::ActionResolver::NameAndTask; also remove
\&'action_name' and 'task_name' properties.
.IP "\(bu" 4
Use OpenInteract2::ParamContainer for \f(CW\*(C`param()\*(C'\fR and related methods.
.IP "\(bu" 4
Add \f(CW\*(C`param_boolean()\*(C'\fR to return a '\s-1TRUE\s0' if a parameter value is
defined, '\s-1FALSE\s0' if not. (Similar to \f(CW\*(C`param_toggled()\*(C'\fR, but it seems
like '\s-1TRUE\s0' and '\s-1FALSE\s0' are boolean literals in many databases.)
.IP "\(bu" 4
Remove \f(CW\*(C`_find_custom_languages()\*(C'\fR and the ability to specify a class
to do so. Overdesign, and you can do it other ways.
.IP "\(bu" 4
Renamed internal and previously undocumented method from
\&\f(CW\*(C`find_language()\*(C'\fR to \f(CW\*(C`assign_languages()\*(C'\fR and allow optional
override values to be passed in. This lets the language be assigned
later in the process.
.PP
OpenInteract2::Setup
.PP
(Also see the notes under \fBMajor Changes\fR for 1.99_06 above.)
.IP "\(bu" 4
Use OpenInteract2::ParamContainer for \f(CW\*(C`param()\*(C'\fR and related methods.
.PP
OpenInteract2::SPOPS
.IP "\(bu" 4
\&\s-1OIN\-154:\s0 override \f(CW\*(C`object_description()\*(C'\fR from \s-1SPOPS\s0 and add our own
URL-handling features; also add 'date' so that objects can expose a
created\-on/updated\-on date and make generic object listings more
useful.
.IP "\(bu" 4
\&\s-1OIN\-38:\s0 get rid of object keys
.PP
OpenInteract2::SQLInstall
.IP "\(bu" 4
\&\s-1OIN\-134:\s0 Allow \f(CW\*(C`install_structure()\*(C'\fR to optionally take one or more
files as arguments. If specified the installer will only process files
by that name. This allows for incremental upgrades where you add
tables/sequences.
.PP
OpenInteract2::TT2::Plugin
.IP "\(bu" 4
Added \f(CW\*(C`as_boolean()\*(C'\fR for evaluating a boolean value in any of its
case-insensitive forms \- 't', 'true', 'y', 'yes', '1'.
.IP "\(bu" 4
Added \f(CW\*(C`as_boolean_label()\*(C'\fR for evaluating a boolean value in any of
its case-insensitive forms \- 't', 'true', 'y', 'yes', '1' \*(-- and
returning a localized human label as a result.
.PP
OpenInteract2::Util
.IP "\(bu" 4
Added \f(CW\*(C`digest_content( $content )\*(C'\fR to calculate the \s-1MD5\s0 digest of
arbitrary data.
.IP "\(bu" 4
Added \f(CW\*(C`is_same_file( $path_a, $path_b )\*(C'\fR.
.IP "\(bu" 4
Move \f(CW\*(C`find_factry_subclasses()\*(C'\fR here from OpenInteract2::Manage
and modify it to assume \f(CW@INC\fR in unless other directories given.
.IP "\(bu" 4
Move code from OpenInteract2::Action (where we determined cache
expiration) to \f(CW\*(C`time_duration_in_seconds()\*(C'\fR.
.SS "Package Updates"
.IX Subsection "Package Updates"
The following packages have been updated since the last version. See
the 'Changes' file for each to view the modifications:
.PP
.Vb 10
\&   OpenInteract     1.99_05 \-> 1.99_06
\&   \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&   base:            2.11    \-> 2.15
\&   base_box:        2.17    \-> 2.20
\&   base_error:      2.10    \-> 3.02
\&   base_group:      2.16    \-> 2.19
\&   base_page:       2.28    \-> 2.31
\&   base_security:   2.18    \-> 2.21
\&   base_template:   3.15    \-> 3.17
\&   base_theme:      2.10    \-> 2.13
\&   base_user:       2.35    \-> 2.40
\&   comments:        1.18    \-> 1.23
\&   full_text:       2.58    \-> 2.61
\&   lookup:          2.07    \-> 2.09
\&   news:            2.20    \-> 2.24
\&   object_activity: 2.11    \-> 2.13
\&   system_doc:      2.08    \-> 2.10
\&   whats_new:       2.10    \-> 2.12
.Ve
.SH "1.99_05 (2.0 beta 5), 5 Dec 2004"
.IX Header "1.99_05 (2.0 beta 5), 5 Dec 2004"
.SS "Upgrade Notes"
.IX Subsection "Upgrade Notes"
The following keys were added to the server configuration with these
default values. These are mandatory.
.PP
.Vb 2
\& [Global]
\& timezone              = America/New_York
\&  
\& [fulltext]
\& default = DBI
\& 
\& [fulltext DBI]
\& class           = OpenInteract2::FullTextIndexer::DBI
\& datasource      = main
\& column_group    = listing
\& min_word_length = 3
\& max_word_length = 30
\& index_table     = full_text_index
\& class_map_table = full_text_index_class
\& stem_locale     = en
\&  
\& [system_class]
\& setup            = OpenInteract2::Setup
\& ini_reader       = OpenInteract2::Config::Ini
\&
\& [request]
\& apache     = OpenInteract2::Request::Apache
\& apache2    = OpenInteract2::Request::Apache2
\& cgi        = OpenInteract2::Request::CGI
\& lwp        = OpenInteract2::Request::LWP
\& standalone = OpenInteract2::Request::Standalone
\&
\& [response]
\& apache     = OpenInteract2::Response::Apache
\& apache2    = OpenInteract2::Response::Apache2
\& cgi        = OpenInteract2::Response::CGI
\& lwp        = OpenInteract2::Response::LWP
\& standalone = OpenInteract2::Response::Standalone
.Ve
.PP
We've also moved the configuration for where Template Toolkit should
store its compiled templates; remove:
.PP
.Vb 3
\& [dir]
\& ...
\& cache_tt      = $WEBSITE/cache/tt
.Ve
.PP
and add:
.PP
.Vb 3
\& [content_generator TT]
\& ...
\& compile_dir           = cache/tt
.Ve
.PP
(If you don't do this everything will still work as a default is
provided for you and the old value is ignored.)
.PP
Also: you no longer declare observer-to-action (previously
filter-to-action) mappings in 'server.ini'. Both the observer
declarations and mapping observers to actions go into a new
\&'observer.ini' file. This replaces 'filter.ini' as filters are just a
particular type of observer. See OpenInteract2::Observer for more
information.
.SS "Major Changes"
.IX Subsection "Major Changes"
.IP "\(bu" 4
Searching framework overhauled. Some of the classes are now in the
main distribution (OpenInteract2::FullTextIndexer,
OpenInteract2::FullTextIterator and
OpenInteract2::FullTextRules) and the 'full_text' package now
contains one implementation of the search engine. This opens the door
for someone \*(-- maybe you! \*(-- to write a 'full_text_plucene' or
something similar.
.IP "\(bu" 4
New management task OpenInteract2::Manage::Website::ExportData will
export data into \s-1SQL\s0 statements, \s-1XML\s0 or different types of Perl data
structures, including one that's used in the \s-1OI2\s0 data import
process. So you can move data between databases really easily.
.IP "\(bu" 4
New management task
OpenInteract2::Manage::Website::UpdatePackageFromWebsite allows you
to work in short iterations on a 'live' package \*(-- one deployed to a
website \*(-- then port those changes back to your development package in
one fell swoop.
.IP "\(bu" 4
More extension capabilities: you can now define a setup class (in
place of OI2::Setup) and an \s-1INI\s0 reader (in place of OI2::Config::Ini)
to be set in the server configuration under 'system_class'.
.IP "\(bu" 4
All common actions that modify persistent data
(OpenInteract2::Action::CommonAdd,
OpenInteract2::Action::CommonUpdate,
OpenInteract2::Action::CommonRemove) now throw pre and post storage
observations ('pre add', 'post add', etc.). So you can attach external
observers to an action to, for instance, post a new use.perl journal
entry with the contents of the object just created, tag the
just-modified object with metadata, etc.
.IP "\(bu" 4
Default session manager now uses the filesystem rather than the
database.
.IP "\(bu" 4
Request and Response implementations are now listed in the server
configuration rather than just in code.
.IP "\(bu" 4
Since filters are just specific instances of observers we changed all
references from 'filter' to 'observer' \*(-- OpenInteract2::Filter is
now OpenInteract2::Observer, and the package configuration key
\&'filter' is now 'observer'.
.IP "\(bu" 4
Lots of trying to make the system easier to understand, mostly at a
developer-level. This includes cleaning up interfaces, making common
usages easier, etc.
.IP "\(bu" 4
Lots of changes to the packages included in the distribution.
.SS "Minor Changes"
.IX Subsection "Minor Changes"
OpenInteract2::Action
.IP "\(bu" 4
Be able to use shorthand to specify minutes, hours or days in
\&'cache_expire' key.
.IP "\(bu" 4
If you use a single value for 'cache_expire' it will be applied to all
tasks within the action.
.IP "\(bu" 4
\&\s-1OIN\-47:\s0 Expose the action's package via the 'package_name' method and
its associated OpenInteract2::Package object via the 'package'
method.
.IP "\(bu" 4
Add '\fImessage_from_key_or_param()\fR' shortcut method.
.IP "\(bu" 4
If a 'template_source' is specified in an action configuration and
it's not keyed by task, just assume the author knows what they're
doing and use that template for all tasks in the action. This allows
you to more easily tie a template to a task in configuration:
.Sp
.Vb 4
\& [myaction]
\& class = Foo::Bar
\& task  = baz
\& template_source = mypkg::mytemplate
.Ve
.Sp
It also means you can use the same template for all tasks, which can
be useful. (For instance, if you have a 'mysearch' action and each
task allows you to specify different parameters ['by_name', 'by_date',
\&'by_city', etc.], you may want all the task results to go to the same
template.)
.IP "\(bu" 4
Ensure 'cache_expire' is treated as a property in \f(CW\*(C`clone()\*(C'\fR and
copied over.
.IP "\(bu" 4
If an action is caching content and we get a cache hit, issue a 'cache
hit' observation so observers can react to it.
.IP "\(bu" 4
Add shortcut methods \f(CW\*(C`add_error()\*(C'\fR, \f(CW\*(C`add_error_key()\*(C'\fR,
\&\f(CW\*(C`add_status()\*(C'\fR, and \f(CW\*(C`add_status_key()\*(C'\fR \*(-- so you can replace:
.Sp
.Vb 2
\&  $self\->param_add( error_msg => $self\->_msg( \*(Aqsome.key\*(Aq, $msg_param ) );
\&  $self\->param_add( status_msg => $self\->_msg( \*(Aqsome.key\*(Aq, $msg_param ) );
.Ve
.Sp
with either:
.Sp
.Vb 2
\&  $self\->add_error( "You messed up!" );
\&  $self\->add_status( "Things are great!" );
.Ve
.Sp
or (if you're using localized messages):
.Sp
.Vb 2
\&  $self\->add_error_key( \*(Aqsome.l10n.key\*(Aq, $msg_param );
\&  $self\->add_status_key( \*(Aqsome.l10n.key\*(Aq, $msg_param );
.Ve
.Sp
Also added \f(CW\*(C`clear_error()\*(C'\fR and \f(CW\*(C`clear_status()\*(C'\fR, which delete all
error/status messages.
.PP
OpenInteract2::Action::Common
.IP "\(bu" 4
\&\s-1OIN\-43:\s0 When retrieving the \s-1ID\s0 field for the object we're working on
also check to see whether any mapped field is also available. (Mostly
used for \s-1LDAP\s0.)
.PP
OpenInteract2::Action::CommonAdd
.IP "\(bu" 4
Add 'pre add' and 'post add' observations fired from the action in the
\&\f(CW\*(C`add()\*(C'\fR method.
.IP "\(bu" 4
Define 'c_task' action parameter to the task originally invoked.
.PP
OpenInteract2::Action::CommonDisplay
.IP "\(bu" 4
Define 'c_task' action parameter to the task originally invoked.
.PP
OpenInteract2::Action::CommonRemove
.IP "\(bu" 4
Add 'pre remove' and 'post remove' observations fired from the action in the
\&\f(CW\*(C`remove()\*(C'\fR method.
.IP "\(bu" 4
Define 'c_task' action parameter to the task originally invoked.
.PP
OpenInteract2::Action::CommonSearch
.IP "\(bu" 4
\&\s-1OIN\-63:\s0 Pass the right parameters to OpenInteract2::ResultsManage...
.IP "\(bu" 4
Small bit of refactoring to make the \fIsearch()\fR easier to follow.
.IP "\(bu" 4
Define 'c_task' action parameter to the task originally invoked.
.PP
OpenInteract2::Action::CommonUpdate
.IP "\(bu" 4
Add 'pre update' and 'post update' observations fired from the action in the
\&\f(CW\*(C`update()\*(C'\fR method.
.IP "\(bu" 4
Define 'c_task' action parameter to the task originally invoked.
.PP
OpenInteract2::Config::Ini
.IP "\(bu" 4
Introduce a small but very useful syntax change: you can now declare
multiple values in a single line by prepending your key with a '@' and
a separation character. So instead of:
.Sp
.Vb 4
\& [me]
\& child = Bart
\& child = Lisa
\& child = Maggie
.Ve
.Sp
You can say:
.Sp
.Vb 2
\& [me]
\& @,child = Bart, Lisa, Maggie
.Ve
.Sp
or:
.Sp
.Vb 2
\& [me]
\& @|child = Bart | Lisa | Maggie
.Ve
.PP
OpenInteract2::Config::IniFile
.IP "\(bu" 4
If the context is available check it for a custom \s-1INI\s0 reader class and
use it if available. This affects '\fIread_config()\fR', '\fIwrite_config()\fR'
and the newly created '\fIini_factory()\fR' which just generates a new
instance of the class.
.IP "\(bu" 4
Another small but useful change: you can now have '@INCLUDE'
directives to bring in configuration from a separate file. This can
make for more manageable configuration files.
.PP
OpenInteract2::Config::Initializer
.IP "\(bu" 4
Add new observer '_spops_set_hasa' to munge the 'has_a' section within
an \s-1SPOPS\s0 object and allow for more complex configuration. Thanks to
Antti for the spot.
.PP
OpenInteract2::Config::Package
.IP "\(bu" 4
Change all 'filter' references to 'observer'.
.PP
OpenInteract2::Config::PackageChanges
.IP "\(bu" 4
Add '\fIwrite_config()\fR' so we can write a changelog as well as read one.
.PP
OpenInteract2::Config::Readonly
.IP "\(bu" 4
Modify to be used as object rather than series of class methods. Old
methods are still supported but are deprected, and any usage will
issue a 'warn' telling you what to change and where.
.PP
OpenInteract2::Config::TransferSample
.IP "\(bu" 4
Track copied, skipped (due to read-only status) and same files, which
we now check by comparing the \s-1MD5\s0 checksum for the source and
destination. These are all available as properties or, in the right
context, as return values from \f(CW\*(C`run()\*(C'\fR or \f(CW\*(C`transfer()\*(C'\fR.
.PP
OpenInteract2::Context
.IP "\(bu" 4
Add '\fIlookup_fulltext_config()\fR' to return the 'fulltext' configuration
data.
.IP "\(bu" 4
Add '\fIfulltext_indexer()\fR' to find and instantiate the relevant fulltext
indexing object. (Should have as parent
OpenInteract2::FullTextSearch, found in the 'full_text' package.
.IP "\(bu" 4
In \fIcreate()\fR move observer initialization until after the actions are
read in.
.IP "\(bu" 4
\&\s-1OIN\-39:\s0 Add initialization of setup custom class and calls to
\&'\fIrun_pre_process()\fR' and '\fIrun_post_process()\fR' as setup hooks.
.IP "\(bu" 4
\&\s-1OIN\-40:\s0 Add properties 'timezone' and 'timezone_object', and add
\&'\fIcreate_date()\fR' as a factory for DateTime objects with the given
timezone. (Allow 'from_epoch' as well param as standard DateTime
constructor params.)
.IP "\(bu" 4
Add '\fIlookup_box_config()\fR' to return the global box configuration.
.PP
OpenInteract2::Filter::AllCaps
.IP "\(bu" 4
Added sample filter to change content to all caps.
.PP
OpenInteract2::FullTextRules
.IP "\(bu" 4
Extract rules from 'full_text' and move to distribution.
.PP
OpenInteract2::Manage
.IP "\(bu" 4
Move internal method from OI2::Manage::CreateSourceDirectory for
pulling information out of a File::DirSync object and putting it into
a status message.
.IP "\(bu" 4
Add internal methods '\fI_fail()\fR' and '\fI_ok()\fR' for adding status messages
more easily. (All of the internal management tasks were adapted to use
these where possible.)
.PP
OpenInteract2::Manage::Website
.IP "\(bu" 4
Move code for checking whether an \s-1SPOPS\s0 key is valid from
OpenInteract2::Manage::Website::ReindexObject here for common use.
.PP
OpenInteract2::Manage::Website::Create
.IP "\(bu" 4
Add two new directories to website 'cache/sessions' and
\&'cache/sessions_lock' for use by the default session manager
(OpenInteract2::SessionManager::File).
.PP
OpenInteract2::Manage::Website::ExportData
.IP "\(bu" 4
Add new task to export data in SPOPS::Export::Object format.
.PP
OpenInteract2::Manage::Website::TestLDAP
.IP "\(bu" 4
\&\s-1OIN\-13:\s0 Fix typo to allow task to run properly.
.PP
OpenInteract2::Manage::Website::ThemeInstall
.IP "\(bu" 4
\&\s-1OIN\-104:\s0 Assign the default theme as the parent.
.PP
OpenInteract2::Manage::Website::UpdatePackageFromWebsite
.IP "\(bu" 4
\&\s-1OIN\-4:\s0 Add new task to aid development by allowing developers to
modify package in-place on website until everything is working, then
sync those changes back to the development directory for source
control commit (or whatever).
.PP
OpenInteract2::Manage::Website::Upgrade
.IP "\(bu" 4
Display the copied/skipped/same status for all files copied from the
\&'sample/' directory.
.PP
OpenInteract2::Manual::LDAP
.IP "\(bu" 4
\&\s-1OIN\-13:\s0 Update to reflect 2.x configuration keys and other changes.
.PP
OpenInteract::Response and OpenInteract::Request
.IP "\(bu" 4
\&\s-1OIN\-82:\s0 Parent class no longer has a notion of the 'current'
request/response. Just get them from the \s-1CTX\s0 object.
.IP "\(bu" 4
\&\s-1OIN\-68:\s0 Move all type-to-class mappings from code into server
configuration. This makes it easy to use your custom implementations
where necessary \*(-- you can remap 'apache' to
\&'OI2::Request::Apache::MyCustom.
.PP
OpenInteract::Response
.IP "\(bu" 4
\&\s-1OIN\-56:\s0 Add 'charset' property and a 'content_type_header' method
which adds the charset (if specified) to the content type.
.PP
OpenInteract2::Response::*
.IP "\(bu" 4
\&\s-1OIN\-48:\s0 ensure we store the session before doing a redirect
.IP "\(bu" 4
\&\s-1OIN\-56:\s0 use the 'content_type_header' for the 'Content\-Type' as it
includes the charset if specified.
.PP
OpenInteract2::Response::CGI
.IP "\(bu" 4
\&\s-1OIN\-8:\s0 Fix \s-1CGI\s0 response to generate redirects properly, thanks to
Salve Nilsen for the patch.
.PP
OpenInteract2::SessionManager
.IP "\(bu" 4
Explicitly \->\fIdelete()\fR empty sessions, otherwise you get a whole bunch
of entirely unnecessary zero-length files/entries in your session
store.
.PP
OpenInteract2::SessionManager::File
.IP "\(bu" 4
Allow relative directory paths in the 'Directory' and 'LockDirectory'
parameters. If there is no leading directory indicator we prepend the
website directory.
.PP
OpenInteract2::SPOPS
.IP "\(bu" 4
\&\s-1OIN\-104:\s0 In \f(CW\*(C`get_security_scopes()\*(C'\fR: if the request is not defined return
empty scopes.
.PP
OpenInteract2::SQLInstall
.IP "\(bu" 4
\&\s-1OIN\-21:\s0 Add 'dbupdate' and 'dbdelete' functions to data
installation. (You must have \s-1SPOPS\s0 0.87+ to use this, so the
dependency in Makefile.PL/Build.PL was also changed.)
.PP
OpenInteract2::TT2::Plugin
.IP "\(bu" 4
\&\s-1OIN\-79:\s0 Pass value of parameter 'do_not_escape' from template
invocation to OpenInteract2::URL methods
.IP "\(bu" 4
Add \f(CW\*(C`add_params_to_url()\*(C'\fR which just delegates to the new method in
OpenInteract2::URL.
.PP
OpenInteract2::URL
.IP "\(bu" 4
In \f(CW\*(C`create()\*(C'\fR, don't escape or add contextualization to URLs that
begin with an 'http:'.
.IP "\(bu" 4
Add \f(CW\*(C`add_params_to_url( $url, \e%params )\*(C'\fR which appends the escaped
key/value pairs from \f(CW\*(C`\e%params\*(C'\fR to \f(CW$url\fR. Note that \f(CW$url\fR is not
modified in any way \*(-- it's assumed to be contextualized and escaped.
.IP "\(bu" 4
\&\s-1OIN\-79:\s0 in addition to escaping query argument values, also escape the
query argument names and the base \s-1URL\s0.
.PP
OpenInteract2::Util
.IP "\(bu" 4
Add \f(CW\*(C`digest_file()\*(C'\fR as shortcut to calculate the hex \s-1MD5\s0 digest of a
file's contents.
.PP
\&\f(CW\*(C`sample/website/filter.ini\*(C'\fR
.IP "\(bu" 4
Removed in favor of 'observer.ini'; you can delete it if you like.
.PP
\&\f(CW\*(C`sample/website/observer.ini\*(C'\fR
.IP "\(bu" 4
New file used for registering all observers and mapping them to
actions.
.PP
\&\f(CW\*(C`sample/website/server.ini\*(C'\fR
.IP "\(bu" 4
Add 'fulltext' section to specify the default full-text indexer.
.IP "\(bu" 4
Add 'fulltext.DBI' section to specify the class name and other
configuration parameters for the default full-text indexer.
.IP "\(bu" 4
\&\s-1OIN\-39:\s0 Add 'system_class.setup' to allow custom setup class
registration
.IP "\(bu" 4
\&\s-1OIN\-40:\s0 Add 'Global.timezone' to define server-wide timezone. (See
corresponding proprties added to OpenInteract2::Context.)
.IP "\(bu" 4
Add 'system_class.ini_reader' to allow custom \s-1INI\s0 reader
registration. Thanks to antti.vahakotamaki@helsinki.fi for the
inspiration.
.PP
\&\f(CW\*(C`Miscellaneous\*(C'\fR
.IP "\(bu" 4
Add 'Scalar::Util' as dependency in both Makefile.PL and Build.PL
.IP "\(bu" 4
All \f(CW\*(C`script/oi2_manage\*(C'\fR status/progress messages now written to
\&\s-1STDERR\s0 so you can separate them out from any meaningful data written
to \s-1STDOUT\s0. (This was useful for the new 'export_data' task so you
could pipe the exported data somewhere else without worrying about
filtering out the progress/status messages.)
.IP "\(bu" 4
Added \f(CW\*(C`sample/website/conf/sample\-action_override.ini\*(C'\fR and renamed
the \s-1SPOPS\s0 version from \f(CW\*(C`sample\-override_spops.ini\*(C'\fR to
\&\f(CW\*(C`sample\-spops_override.ini\*(C'\fR.
.IP "\(bu" 4
Add a link to \*(L"What's new?\*(R" on the default main template.
.PP
\&\f(CW\*(C`script/oi2_manage\*(C'\fR
.IP "\(bu" 4
\&\s-1OIN\-80:\s0 Never re-use the website logging configuration/file, even if
it is absolutely available. It's just too confusing.
.SS "Package Updates"
.IX Subsection "Package Updates"
The following packages have been updated since the last version. See
the 'Changes' file for each to view the modifications:
.PP
.Vb 10
\&   OpenInteract     1.99_04 \-> 1.99_05
\&   \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&   base:            2.10    \-> 2.11
\&   base_box:        2.11    \-> 2.17
\&   base_error:      2.10    \-> 2.10
\&   base_group:      2.11    \-> 2.16
\&   base_page:       2.21    \-> 2.28
\&   base_security:   2.13    \-> 2.18
\&   base_template:   3.11    \-> 3.15
\&   base_theme:      2.09    \-> 2.10
\&   base_user:       2.27    \-> 2.35
\&   comments:        1.10    \-> 1.18
\&   full_text:       2.09    \-> 2.58
\&   lookup:          2.04    \-> 2.07
\&   news:            2.13    \-> 2.20
\&   object_activity: 2.11    \-> 2.11
\&   system_doc:      2.05    \-> 2.08
\&   whats_new:       2.04    \-> 2.10
.Ve
.SH "1.99_04 (2.0 beta 4), 22 May 2004"
.IX Header "1.99_04 (2.0 beta 4), 22 May 2004"
.SS "Major Changes"
.IX Subsection "Major Changes"
.IP "\(bu" 4
Added basic localization support. See OpenInteract2::Manual::I18N
for more information. Note that a number of \s-1OI2\s0 classes have been
modified to support additional data for i18n infrastructure. Also
note: you don't have to use i18n if you don't want to :\-)
.IP "\(bu" 4
You can now migrate your 1.x data automatically. The base \s-1SQL\s0
installation class OpenInteract2::SQLinstall has hooks for doing it
yourself or for declaring a few pieces of information which it will
use to copy data from table to table or to copy data to \s-1SPOPS\s0 objects
which get saved to tables as normal. Read its docs under '\s-1DEVELOPERS:\s0
\&\s-1MIGRATING\s0 \s-1DATA\s0' for more information. All packages shipped in the
distribution should be able to migrate themselves from a 1.x system.
.Sp
The management task 'migrate_data'
(OpenInteract2::Manage::Website::MigratePackageData) is the
external hook to this. Run:
.Sp
.Vb 1
\& oi2_manage task_info \-\-task=migrate_data
.Ve
.Sp
for description and parameter information.
.IP "\(bu" 4
Added new package 'comments' to core distribution. It implements a
simple flat comment thread for any object, so you can have comments on
news items, links, documents, users, etc.
.IP "\(bu" 4
Added new package 'whats_new' to core distribution. With this you can
register an \s-1SPOPS\s0 object with the service and track new additions to a
central location. So when users click \*(L"What's new?\*(R" they see new
documents, news items, comments, etc.
.IP "\(bu" 4
OpenInteract2 now runs under Apache 2/mod_perl 2. This has not been
tested very deeply and I've got about two hours of experience with
mod_perl 2, but at least it's something to work with.
.IP "\(bu" 4
A couple of table fieldname changes were necessary to make \s-1OI2\s0 work
under Sybase Adaptive Server Anywhere (\s-1ASA\s0). So if you have an earlier
beta you'll need to change the name of 'sys_error.message' to
\&'sys_error.err_message' and the 'comment' table to 'oi_comment'. The
former has a backward-compatibility change in the \s-1SPOPS\s0 configuration
(under 'field_map') so you won't even notice.
.IP "\(bu" 4
Tons of cleanup, rewriting, redoing...
.SS "Minor Changes"
.IX Subsection "Minor Changes"
Apache2::OpenInteract2
.IP "\(bu" 4
Add interface for Apache2/mod_perl2.
.PP
HTTP::Daemon::OpenInteract2
.IP "\(bu" 4
Disambiguate '\fIclose()\fR' call on filehandle since we have a '\fIclose()\fR'
method.
.PP
\&\fBOpenInteract2::Action\fR
.IP "\(bu" 4
Add \f(CW\*(C`clone()\*(C'\fR which copies the properties and parameters of the given
object into a new object of the same class. We use this to cache
actions created from the action configuration (profiling showed a good
bit of time spent on this operation).
.IP "\(bu" 4
Modify the cache key we create when an action requests caching. It now
includes the action name instead of the class name, otherwise we'd get
some crazy behavior with action types (since they share the same
class).
.PP
\&\fBOpenInteract2::Action::Common*\fR
.IP "\(bu" 4
Added \s-1SYNOPSIS\s0 documentation displaying all configuration entries
.PP
OpenInteract2::Config::Initializer
.IP "\(bu" 4
Added documentation for people wishing to catch the 'localization'
event, fired when we generate a new localization class.
.PP
OpenInteract2::Config::Package
.IP "\(bu" 4
Add configuration item 'message_file' so users can declare one or more message files.
.PP
OpenInteract2::ContentGenerator
.IP "\(bu" 4
Remove unused 'instance_sub' method.
.PP
\&\f(CW\*(C`OpenInteract2::ContentGenerator::TT2Context\*(C'\fR
.IP "\(bu" 4
Move to OpenInteract2::TT2::Context
.PP
\&\f(CW\*(C`OpenInteract2::ContentGenerator::TT2Plugin\*(C'\fR
.IP "\(bu" 4
Add 'require' for Text::Sentence in '\fIlimit_sentences()\fR'. Thanks to
Mike Castle for pointing out the error.
.IP "\(bu" 4
Move to OpenInteract2::TT2::Plugin
.PP
OpenInteract2::ContentGenerator::TemplateSource
.IP "\(bu" 4
Add new template source type 'message_key' which asks the language
handle to lookup the template name (the normal 'package::name' syntax)
given a particular key.
.PP
OpenInteract2::ContentGenerator::TT2Process
.IP "\(bu" 4
Modify '\fIinitialize()\fR' to save data as state in the content generator
object ($self) rather than use class variables and store it in \s-1CTX\s0 \*(--
the \s-1TT\s0 object is now a content generator property, not a \s-1CTX\s0 property.
.IP "\(bu" 4
Configuration data has moved from 'template_process' to
\&'content_generator' declaration and is pushed into '\fIinitialize()\fR'
rather than being pulled from the server config/CTX.
.IP "\(bu" 4
You can no longer specify the methods in 'custom_init_class' and
\&'custom_variable_class' \*(-- you need to use predefined methods for each
('custom_template_initialize' and 'customize_template_vars',
respectively).
.PP
\&\f(CW\*(C`OpenInteract2::ContentGenerator::TT2Provider\*(C'\fR
.IP "\(bu" 4
Move to OpenInteract2::TT2::Provider
.PP
OpenInteract2::Context
.IP "\(bu" 4
Add method 'lookup_mail_config' as shortcut into 'email' configuration.
.IP "\(bu" 4
Add step during \fIsetup()\fR 'initialize messages' to read in the localized
messages from all packages.
.IP "\(bu" 4
Modify docs for \f(CW\*(C`lookup_content_generator_config()\*(C'\fR (only returns class
associated with name) and \f(CW\*(C`content_generator()\*(C'\fR (clarify what's
returned).
.IP "\(bu" 4
Remove '\fItemplate()\fR' method since content generators can store their
own state now, and if you need a Template object you can get it from
the content generator or create one yourself.
.IP "\(bu" 4
Add '\fIlookup_datasource_type_config()\fR' as shortcut into
\&'datasource_type' configuration
.IP "\(bu" 4
Add '\fIlookup_id_config()\fR' as shortcut into 'id' configuration.
.IP "\(bu" 4
Add '\fIlookup_cache_config()\fR' as shortcut into 'cache' configuration.
.IP "\(bu" 4
Add '\fIlookup_config_watcher_config()\fR' as shortcut into 'config_watcher'
configuration
.PP
OpenInteract2::Exception::Parameter
.IP "\(bu" 4
Move to separate class so we can do customized stringification
(previously just a declaration in OI2::Exception)
.PP
OpenInteract2::I18N
.IP "\(bu" 4
Add base class for use with Locale::Maketext
.PP
OpenInteract2::I18N::Initializer
.IP "\(bu" 4
Add class to read message keys and generate Locale::Maketext
subclasses from them. (Called from OI2::Setup)
.PP
OpenInteract2::Manage::Website::CreateSuperuserPassword
.IP "\(bu" 4
Add check so that if 'login.disable_superuser_password_change' is set
we'll throw an exception.
.PP
OpenInteract2::Manage::Website::PackageCheckExportInstall
.IP "\(bu" 4
Add new task to check a package, export it if the check succeeds, and
install it to a website if the export succeeds.
.PP
OpenInteract2::Manual::I18N
.IP "\(bu" 4
Add section of manual to deal with I18N/L10N issues.
.PP
OpenInteract2::Package
.IP "\(bu" 4
Add \f(CW\*(C`get_message_files()\*(C'\fR to retrieve the files with localized
messages.
.IP "\(bu" 4
In '\fIcreate_skeleton()\fR' reject any blank/all\-space package names.
.PP
OpenInteract2::Reponse::Apache2
.IP "\(bu" 4
Add interface for Apache2/mod_perl2 output.
.PP
OpenInteract2::Request
.IP "\(bu" 4
Add '\fIauth_clear()\fR' method to clear all 'auth_*' properties from current
request. Generally used when loggin a user out.
.IP "\(bu" 4
Document that the \f(CW\*(C`assign_request_url()\*(C'\fR method should take the
\&\fBfull\fR request \s-1URL\s0, including the query string.
.PP
OpenInteract2::Request::Apache
.IP "\(bu" 4
Ensure parent \f(CW\*(C`assign_request_url()\*(C'\fR gets the request \s-1URL\s0 with query
arguments.
.PP
OpenInteract2::Request::Apache2
.IP "\(bu" 4
Add interface for Apache2/mod_perl2 input, although we're not using
the mp2 version of Apache::Request yet because I couldn't get it
working properly on my machine. (Lots of 'child pid 12671 exit signal
Bus error (10)' type messages...) Instead we just borrow the
parameter/upload parsing from OpenInteract2::Request::CGI.
.IP "\(bu" 4
Ensure parent \f(CW\*(C`assign_request_url()\*(C'\fR gets the request \s-1URL\s0 with query
arguments.
.PP
OpenInteract2::Request::CGI
.IP "\(bu" 4
Ensure parent \f(CW\*(C`assign_request_url()\*(C'\fR gets the request \s-1URL\s0 with query
arguments.
.PP
OpenInteract2::Setup
.IP "\(bu" 4
Add \f(CW\*(C`read_localized_messages()\*(C'\fR to read in the localized messages.
.PP
OpenInteract2::SQLInstall
.IP "\(bu" 4
Add \f(CW\*(C`migrate_data()\*(C'\fR method along with implementations to copy data
between tables and from a table to objects.
.IP "\(bu" 4
Modify the data file and structure file installations to report the
full path to the files used rather than the filename itself.
.IP "\(bu" 4
Fix bug where a '0' specified in the object \s-1ID\s0 in a security
specification would actually try to insert a hashref of the default
security information. (Ah, perl's true/false semantics...)
.PP
OpenInteract::TT2::Provider
.IP "\(bu" 4
Sync up with how \s-1TT2\s0 manages the linked list of stuff to refresh.
.PP
\&\f(CW\*(C`sample/README\*(C'\fR
.IP "\(bu" 4
Add description of what the sample files are for and how to create a
public source directory.
.PP
\&\f(CW\*(C`sample/apache2/*\*(C'\fR
.IP "\(bu" 4
Add Apache 2/mod_perl 2 configuration files, copied over to a new
website when it's created.
.PP
\&\f(CW\*(C`sample/msg/*\*(C'\fR
.IP "\(bu" 4
Add global message files (only \s-1US\s0 English for now, like to help?)
.PP
\&\f(CW\*(C`sample/website/conf/server.ini\*(C'\fR
.IP "\(bu" 4
Add key 'dir.package' so we can get the base package directory easily.
.IP "\(bu" 4
Add key 'dir.msg' so we can get the global message directory
.IP "\(bu" 4
Remove 'template_process' configuration section, moving the data into
the respective 'content_generator' section.
.IP "\(bu" 4
Modify content generator type '\s-1HTMLT\s0' to be 'HTMLTemplate', and
\&'TextTmpl' to be 'TextTemplate'. (Seems friendlier...)
.IP "\(bu" 4
Add section 'language' to support I18N efforts.
.IP "\(bu" 4
Add 'login.disable_superuser_password_change' to stop people from
changing superuser password using oi2_manage.
.IP "\(bu" 4
Rename 'cache_info' to 'cache', and remove subsections 'data' and
\&'template' \*(-- all 'data' items are in 'cache' and 'template' items
moved to the \s-1TT2\s0 content generator configuration.
.IP "\(bu" 4
Remove 'context.info.request' and 'context_info.response', the
adapters are responsible for setting this.
.IP "\(bu" 4
Rename 'display_info' to 'redirect' since that's all it was holding.
.IP "\(bu" 4
Remove key 'system_class.security' since you can just do
\&\s-1CTX\-\s0>lookup_object( 'security' ) instead.
.SH "1.99_03 (2.0 beta 3), 8 September 2003"
.IX Header "1.99_03 (2.0 beta 3), 8 September 2003"
.SS "Major Changes"
.IX Subsection "Major Changes"
.IP "\(bu" 4
A very thorough package development tutorial is in full effect, see
OpenInteract2::Manual::Tutorial.
.IP "\(bu" 4
\&\s-1API\s0 for management tasks has changed, and \f(CW\*(C`oi2_manage\*(C'\fR is now a much
simpler shell around the main facade. Adding a new task is as simple
as creating a class under the right namespace and registering yourself
with the facade.
.IP "\(bu" 4
Actions can store messages for the view to pickup and the built-in
template input widgets are hooked into them, making for fairly
seamless validation roundtripping.
.IP "\(bu" 4
\&\s-1SPOPS\s0 and Action configurations can now be modified at server startup
by your code. This allows you to create configuration shortcuts (like
\&'is_googlable') and make other developers on your team happy. (See
OpenInteract2::Config::Initializer)
.IP "\(bu" 4
Actions in all system packages should work as advertised, with the
exception of some functionality in the \f(CW\*(C`base_page\*(C'\fR package.
.IP "\(bu" 4
\&\fBTons\fR of smaller changes throughout, including cleaner APIs, more
tests, lots more documentation and examples, and cleaning up as a
result of testing more of the system.
.SS "Minor Changes"
.IX Subsection "Minor Changes"
\&\f(CW\*(C`Makefile.PL/Build.PL\*(C'\fR
.IP "\(bu" 4
Bump up required version for File::DirSync since it
has new feature.
.IP "\(bu" 4
Add Test::MockObject as requirement.
.Sp
HTTP::Daemon::OpenInteract2
.IP "\(bu" 4
Use the \f(CW\*(C`version()\*(C'\fR from the context rather than hardcoding it
ourselves. (old...)
.IP "\(bu" 4
Move most of the functionality from \f(CW\*(C`script/oi2_daemon\*(C'\fR here so we
can access it from other places too (like tests).
.PP
OpenInteract2::Action
.IP "\(bu" 4
Rename a number of methods to give them a 'protected' veneer:
\&\f(CW\*(C`check_task_validity()\*(C'\fR, \f(CW\*(C`find_task()\*(C'\fR, \f(CW\*(C`find_task_method()\*(C'\fR become
\&\f(CW\*(C`_check_task_validity()\*(C'\fR, \f(CW\*(C`_find_task()\*(C'\fR, \f(CW\*(C`_find_task_method()\*(C'\fR,
respectively.
.IP "\(bu" 4
Add \fIfactory_log()\fR and \fIfactory_error()\fR to capture messages from
Class::Factory and redirect to our logger
.IP "\(bu" 4
Add overridable \fIinit_at_startup()\fR and documentation with example.
.PP
OpenInteract2::Action::CommonRemove
.IP "\(bu" 4
Blew up because wrong method called, how embarrassing. Works now.
.PP
OpenInteract2::Action::CommonSearch
.IP "\(bu" 4
Always pass \f(CW\*(C`search_criteria\*(C'\fR to template to be nice, add warning
about the format of the fieldnames.
.PP
OpenInteract2::Action::TemplateOnly
.IP "\(bu" 4
Reflect parent change of \f(CW\*(C`find_task()\*(C'\fR to \f(CW\*(C`_find_task()\*(C'\fR.
.PP
OpenInteract2::Auth
.IP "\(bu" 4
Make an object rather than using class methods. The various
information that we passed around is now in the auth object, and this
object is passed to any custom handlers you may have defined as well.
.IP "\(bu" 4
Port change from 1.x allowing users to configure the website not to
accept users who aren't logged in.
.PP
OpenInteract2::Auth::AdminCheck
.IP "\(bu" 4
Modify to use information from auth object rather than having it
passed in.
.PP
OpenInteract2::Auth::Group
.IP "\(bu" 4
Modify to use information from auth object rather than having it
passed in.
.PP
OpenInteract2::Auth::User
.IP "\(bu" 4
Modify to use information from auth object rather than having it
passed in.
.PP
OpenInteract2::Config
.IP "\(bu" 4
Add \fIfactory_log()\fR and \fIfactory_error()\fR to capture messages from
Class::Factory and redirect to our logger
.IP "\(bu" 4
In \fItranslate_dirs()\fR ensure that 'dir.website' doesn't have a trailing
slash.
.PP
OpenInteract2::Config::Base
.IP "\(bu" 4
After object initialized remove trailing '/' from all set directories.
.PP
OpenInteract2::Config::Initializer
.IP "\(bu" 4
Add class to handle \s-1SPOPS\s0 and Action configuration initialization
duties. The class is observable so you can add custom behavior. (See
docs for details and how this hooks into packages.)
.IP "\(bu" 4
Note that the use of '\s-1TASK_EDIT\s0' in the 'display' key of \s-1SPOPS\s0 objects
will only result in the 'url_edit' key being populated from a call to
\&'\fIobject_configuration()\fR' on an \s-1SPOPS\s0 object if you're using \s-1SPOPS\s0
>= 0.79. It doesn't do any harm otherwise, you just won't get the
right URLs...
.PP
OpenInteract2::Config::Package
.IP "\(bu" 4
Add 'config_watcher' property
.PP
OpenInteract2::ContentGenerator::TT2Plugin
.IP "\(bu" 4
Add \f(CW\*(C`can_write\*(C'\fR shortcut so we don't have to use 'tmp_security_level'
anymore...
.PP
OpenInteract2::Controller
.IP "\(bu" 4
Add \fIfactory_log()\fR and \fIfactory_error()\fR to capture messages from
Class::Factory and redirect to our logger
.PP
OpenInteract2::Context
.IP "\(bu" 4
Create \f(CW\*(C`lookup_session_config()\*(C'\fR rather than having outsiders root
around server config. In the same vein add
\&'lookup_default_action_info', 'default_action_id',
\&'lookup_default_datasource_name', lookup_system_datasource_name',
\&'lookup_default_ldap_datasource_name', 'lookup_directory',
\&'lookup_temp_lib_directory'.
.IP "\(bu" 4
Rename 'datasource_config' \-> 'lookup_datasource_config'
.IP "\(bu" 4
Add docs for filter shortcut methods
.IP "\(bu" 4
Remove \f(CW\*(C`alias()\*(C'\fR and replace with \f(CW\*(C`lookup_class()\*(C'\fR. This means that:
.Sp
.Vb 1
\&  CTX\->template_class
.Ve
.Sp
and similar calls (based on the names in the 'system_alias' server
configuration key, now replaced by 'system_class') will no longer work
and you must use:
.Sp
.Vb 1
\& CTX\->lookup_class( \*(Aqtemplate\*(Aq )
.Ve
.Sp
instead. This wasn't used terribly often and all uses in \s-1OI2\s0 and
packages have been replaced.
.Sp
This change also entailed modifying the setup so that the alias
building features weren't called, and removing the corresponding
OI2::Setup call (see below).
.IP "\(bu" 4
Remove \f(CW\*(C`global_attribute()\*(C'\fR \*(-- feature without a purpose.
.PP
OpenInteract2::Manage
.IP "\(bu" 4
Modify the \s-1API\s0 quite a bit. Some is just renaming (e.g.,
\&'\fIbrief_description()\fR' is now '\fIget_brief_description()\fR') but other bits
are much more substantial. Just read
OpenInteract2::Manual::Management
for how things work now.
.IP "\(bu" 4
No tasks are hardcoded in this class (or the
OpenInteract2::Manage::Package or
OpenInteract2::Manage::Website
abstract subclasses). Instead we find all classes from \f(CW@INC\fR under
the \f(CW\*(C`OpenInteract2::Manage\*(C'\fR namespace (including subnamespaces) and
\&\f(CW\*(C`require\*(C'\fR them. This means all you need to do to create a new task is
put it under the right package and register yourself with the main
management class and you're good to go.
.IP "\(bu" 4
Add \fIfactory_log()\fR and \fIfactory_error()\fR to capture messages from
Class::Factory and redirect to our logger
.PP
OpenInteract2::Manage::CreateSourceDirectory
.IP "\(bu" 4
Update to use new feature in File::DirSync so we can
return on request information about what got synchronized.
.PP
OpenInteract2::Manage::Website::CleanExpiredSessions
.IP "\(bu" 4
Add new task to delete old and empty sessions. Replaces script from
\&'base' package.
.PP
OpenInteract2::Manage::Website::CreateSecurity
.IP "\(bu" 4
Add new task to batch create security for \s-1SPOPS\s0 objects. Replaces
script from 'base_security' package.
.PP
OpenInteract2::Manage::Website::InstallPackage
.IP "\(bu" 4
After package is installed add notification to refresh the temp lib
dir if necessary.
.IP "\(bu" 4
Do explicit check to see if this package name/version already
installed, and if so don't fail but generate a message indicating that
the install wasn't performed.
.PP
OpenInteract2::Manage::Website::ReindexObjects
.IP "\(bu" 4
Add new task to reindex (or initially index) \s-1SPOPS\s0 objects. Replaces
script from 'full_text' package.
.PP
OpenInteract2::Manual::AdminDatabase
.IP "\(bu" 4
Add instructions for initializing iAnywhere \s-1ASA\s0, thanks to Greg Fenton
for writing them up.
.PP
OpenInteract2::Manual::Architecture
.IP "\(bu" 4
Fix errors in request process pointed out by Greg Fenton.
.IP "\(bu" 4
Add discussion of how \s-1OI\s0 implements \s-1MVC\s0 (or really, how it implements
separation of concerns and the pieces of \s-1OI\s0 that map to the letters in
\&\s-1MVC\s0...)
.PP
OpenInteract2::Manual::Management
.IP "\(bu" 4
Add content, reflects fully the recent \s-1API\s0 changes.
.PP
OpenInteract2::Manual::QuickStart
.IP "\(bu" 4
Fix errors and inconsistencies and make clarifications throughout
document, thanks to Greg Fenton for detailed report.
.PP
OpenInteract2::Manual::Templates
.IP "\(bu" 4
Add discussion of multiple content generators with the same code,
declaring 'template_source' in an action to enable this, and similar
matters.
.PP
OpenInteract2::Manual::Tutorial
.IP "\(bu" 4
Write the thing. It's really big, read it now!
.PP
OpenInteract2::Manual::TutorialAdvanced
.IP "\(bu" 4
Add placeholder for tutorial on advanced \s-1OI\s0 functionality.
.PP
OpenInteract2::Package
.IP "\(bu" 4
Add little '\fIparse_full_name()\fR' class method to complement 'full_name'
object method.
.IP "\(bu" 4
Modify \fIcheck()\fR for templates \*(-- it was succeeding even though the
template file didn't exist.
.IP "\(bu" 4
On \fIinstall()\fR be sure to translate the package filename into an
absolute one, otherwise we eventually lose track.
.IP "\(bu" 4
Fix for reading package from file \*(-- directory wasn't being set
correctly.
.PP
OpenInteract2::Repository
.IP "\(bu" 4
Add internal methods to maintain a cache of packages rather than
refetch them on every '\fIfetch_package()\fR'. This may come back to bite us
in the future because there's no synchronization going on...
.PP
OpenInteract2::Request
.IP "\(bu" 4
Add 'action_errors' and '\fIadd_action_errors()\fR', plus docs.
.IP "\(bu" 4
Add 'get_implementation_type'
.PP
OpenInteract2::Response
.IP "\(bu" 4
Add 'get_implementation_type'
.IP "\(bu" 4
Rename \f(CW\*(C`_set_url()\*(C'\fR to \f(CW\*(C`assign_request_url()\*(C'\fR so other modules can
call; rename call in subclasses as well.
.PP
OpenInteract2::Response
.IP "\(bu" 4
Add \fIfactory_log()\fR and \fIfactory_error()\fR to capture messages from
Class::Factory and redirect to our logger
.IP "\(bu" 4
Add \fIfactory_log()\fR and \fIfactory_error()\fR to capture messages from
Class::Factory and redirect to our logger
.PP
OpenInteract2::ResultsManage
.IP "\(bu" 4
Use methods instead of object hash references. Another notch for
Class::Accessor...
.PP
OpenInteract2::SessionManager
.IP "\(bu" 4
Renamed this and all subclasses from OI2::Session* to reflect that
we're not session objects, we're managing session objects.
.PP
OpenInteract2::Setup
.IP "\(bu" 4
Move all initialization methods for action config and calls to the
datasource-specific initializer to OpenInteract2::Config::Initializer
so that users can add custom behaviors.
.IP "\(bu" 4
Document \f(CW\*(C`create_temp_lib\*(C'\fR call better, explaining our intentions.
.IP "\(bu" 4
Remove \f(CW\*(C`build_aliases\*(C'\fR and documentation for it. (No longer needed,
see OI2::Context change docs.)
.PP
OpenInteract2::SPOPS
.IP "\(bu" 4
Fix bug resulting from evaluating \f(CW\*(C`$spops_obj\->id\*(C'\fR in list
context that was fixed in 1.x but didn't get replicated. Thanks to
damien leri (again!) for pointing it out.
.IP "\(bu" 4
Move all configuration initialization modification routines into
OpenInteract2::Config::Initializer.
.IP "\(bu" 4
All object key methods now use the 'system' datasource name rather
than relying on the object that was being keyed.
.PP
OpenInteract2::SPOPS::DBI
.IP "\(bu" 4
Move all configuration initialization modification routines into
OpenInteract2::Config::Initializer.
.PP
OpenInteract2::SPOPS::LDAP
.IP "\(bu" 4
Move all configuration initialization modification routines into
OpenInteract2::Config::Initializer.
.PP
OpenInteract2::SQLInstall
.IP "\(bu" 4
Modify some server config retrievals into method calls on the
context. (Data hiding, what's that?)
.Sp
\&\f(CW\*(C`sample/website/conf/server.ini\*(C'\fR
.IP "\(bu" 4
Add 'config_watcher' section. Allows us to declare SPOPS/action
configuration initialization observers.
.IP "\(bu" 4
Add 'datasource_config.ldap' for the default \s-1LDAP\s0 datasource
.IP "\(bu" 4
Add 'required', 'required_url' and 'required_skip' to 'login'
.IP "\(bu" 4
Add 'use_meta_redirect' and 'use_header_redirect' to 'display_info'
.IP "\(bu" 4
Rename 'system_alias' section to 'system_class', remove a number of
items from it and rename some others.
.Sp
\&\f(CW\*(C`script/oi2_daemon\*(C'\fR
.IP "\(bu" 4
Store the \s-1PID\s0 file in the directory from where the configuration file
is read. (Thanks to Greg Fenton for suggestion.)
.IP "\(bu" 4
Move most functionality to
HTTP::OpenInteract2::Daemon so we can
run it outside the script.
.PP
\&\f(CW\*(C`t/*\*(C'\fR
.IP "\(bu" 4
Add lots of stub tests to be filled in shortly \*(-- honest! Also created
a \s-1TODO\s0 listing of tests to create.
.SH "1.99_02"
.IX Header "1.99_02"
\&\s-1NOTE:\s0 Skipped this release to sync up the beta number with the extra
dev number.
.SH "1.99_01 (2.0 beta 1), 3 July 2003"
.IX Header "1.99_01 (2.0 beta 1), 3 July 2003"
.SS "Major Changes"
.IX Subsection "Major Changes"
.IP "\(bu" 4
Log4perl is now used for all logging. This is a major change in how
\&\s-1OI2\s0 presents its state to you, allowing you far more flexibility than
you previously had.
.IP "\(bu" 4
\&\fBLots\fR of documentation additions and updates.
.IP "\(bu" 4
Different content generators than the Template Toolkit exist and can
be used. They're not as featureful (e.g., nothing similar to the \s-1TT\s0
plugin) but may be useful when porting applications. They are
\&\f(CW\*(C`Text::Template\*(C'\fR (using
OpenInteract2::ContentGenerator::TextTemplate)
and \f(CW\*(C`HTML::Template\*(C'\fR (using
OpenInteract2::ContentGenerator::HtmlTemplate).
.Sp
You can find examples of using them in the 'news' package \*(-- look at
the bottom of the conf/action.ini file to enable the different actions.
.IP "\(bu" 4
The controller has been decoupled from the content generator. Each
controller is \fBassociated\fR with a content generator, but a content
generator doesn't map to a single controller. (This probably doesn't
make sense to anybody who didn't read the code or try to use a
different content generator, but trust me that it's better.)
.IP "\(bu" 4
OpenInteract2 now has content filters. And they're easy! A filter is
just an observer (see Class::Observable) that
catches 'filter' observations and has an opportunity to modify the
content generated before it's optionally cached.
.IP "\(bu" 4
\&...which leads to caching of action content, now implemented. It's
mostly transparent to your action as long as the cached content
doesn't depend on any non-request parameters. (See
OpenInteract2::Manual::Caching for
lots of info.)
.IP "\(bu" 4
OpenInteract2::Exception now uses Exception::Class rather than
SPOPS::Exception, and E::C is a depdendency.
.IP "\(bu" 4
The standalone daemon (\f(CW\*(C`oi2_daemon\*(C'\fR) respects the \f(CW\*(C`OPENINTERACT2\*(C'\fR
environment variable and will use it to find the server configuration
and the daemon configuration if unspecified.
.SS "Minor changes"
.IX Subsection "Minor changes"
Too many small fixes and improvements to note, sorry. As we stabilize
to 2.0 this will get explicit.
.SS "Broken stuff"
.IX Subsection "Broken stuff"
Full text searching doesn't seem to work. A number of other actions
have not been fully tested by hand, much less in an automated fashion.
.PP
Also, tests for other areas of the system are lagging.
.SH "1.99_00 (2.0 beta 0), 10 June 2003"
.IX Header "1.99_00 (2.0 beta 0), 10 June 2003"
This is the first \s-1BETA\s0 release. \s-1DO\s0 \s-1NOT\s0 run production systems on it.
.SS "Compatibility"
.IX Subsection "Compatibility"
Since OpenInteract 2.x uses a separate namespace than OpenInteract 1.x
(OpenInteract2 vs. OpenInteract), you should have \fBno problems\fR
installing this on a machine with OpenInteract 1.x.
.PP
There is currently no automated way to upgrade the server
configuration or everything about a custom package. (You can translate
the \f(CW\*(C`conf/action.perl\*(C'\fR and \f(CW\*(C`conf/spops.perl\*(C'\fR into the new \s-1INI\s0 format
\&\*(-- see scripts in \f(CW\*(C`script/\*(C'\fR.) In addition, a number of core packages
have upgraded schemas so you can't simply dump your table and reload
it.
.PP
Before 2.0 final is released there should be tools to:
.IP "\(bu" 4
Do a simple translation of content handlers and other classes. This
would just translate most of the \f(CW$R\fR calls to \s-1CTX\s0 calls (or
\&\s-1CTX\-\s0>request, \s-1CTX\-\s0>response calls).
.IP "\(bu" 4
Do a translation of Template Toolkit directives that have changed
(there aren't many).
.SS "Major Changes"
.IX Subsection "Major Changes"
These are the highlights. Many others are lurking under the covers.
.IP "\(bu" 4
There is no longer a package repository and a website, only a
website. This greatly simplifies development.
.IP "\(bu" 4
You can deploy \s-1OI2\s0 under a specific URL-space so that, for instance,
all requests under '/OI2/' will get translated to the proper action.
.IP "\(bu" 4
And along with deployment you can easily rewrite URLs to fit in the
deployment scheme.
.IP "\(bu" 4
Tight integration with \s-1SPOPS\s0 object persistence still exists and has
been enhanced to make development easier \*(-- you do not have to specify
\&'SPOPS::Secure' in the \s-1ISA\s0, just set the 'is_secure' key to 'yes'. You
also do not have to specify the database type in your persistent
object \*(-- it's wired to a datasource which knows this information, so
we generate it at startup time.
.IP "\(bu" 4
An entirely new management scheme replaced the massive \f(CW\*(C`oi_manage\*(C'\fR
with programmable tasks to create a website, create and install
packages, install database schemas along with associated data and
security settings, and more.
.IP "\(bu" 4
Request parameters that \s-1OI2\s0 deals with are separate from the how those
parameters are retrieved. This means it's easy to deploy an \s-1OI2\s0 server
in different environments \*(-- it ships with interfaces for Apache
1.x/mod_perl 1.x, \s-1CGI\s0, and a standalone server based on \s-1LWP\s0. It's easy
to create interfaces for other systems as well. (See \s-1OI2\s0
\&\s-1INTERFACES\s0.)
.IP "\(bu" 4
Content handlers are now objects instead of classes, all deriving from
OpenInteract2::Action. This simplifies
development, making each action stateful rather than passing around a
dumb hashref.
.IP "\(bu" 4
You can now generate any kind of content from \s-1OI2\s0. \s-1OI2\s0 is still
heavily biased toward the Template Toolkit (can you blame it?), but
you can plugin any type of content generator you like. A sample one is
in the distribution:
OpenInteract2::ContentGenerator::TextTemplate.
.IP "\(bu" 4
The \f(CW\*(C`OpenInteract::CommonHandler\*(C'\fR megalith has been split up into
separate classes to deal with searching, displaying, updating, adding,
and removing objects.
.IP "\(bu" 4
All actions in the core packages have been modified to use these
common handlers where possible, and when not possible they don't
overload as much functionality into a single task. For instance,
\&'display' will just display a non-editable object; 'display_form' will
just display an existing object in a form for updating; 'display_add'
will display a form without an object.
.IP "\(bu" 4
The procedures for installing \s-1SQL\s0 structures, initial data and
security has been totally overhauled. It's \fBmuch\fR to create an
installer now.
.IP "\(bu" 4
Authentication is more flexible and can be adapted to different
systems (e.g., \s-1HTTP\s0 authentication instead of cookies) more easily.
.IP "\(bu" 4
The package and repository code was entirely rewritten. The repository
now holds the bare minimum to keep track of objects and it should
never become corrupted.
.IP "\(bu" 4
Everything in \s-1OI2\s0 should throw an exception object rather than issue a
\&\f(CW\*(C`die\*(C'\fR. This allows us to discern the different types of errors more
easily, keep track of where they were thrown, etc.
.IP "\(bu" 4
An ever-growing testing suite ensures that \s-1OI2\s0 can adapt easily and
also provides a separate bunch of documentation.
.SS "\s-1OI2\s0 \s-1INTERFACES\s0"
.IX Subsection "OI2 INTERFACES"
An 'interface' refers to how OpenInteract2 interacts with the outside
world. An interface consists of three parts:
.IP "\(bu" 4
Adapter to take the user's request, login the user and create the
necessary OpenInteract2 objects
(OpenInteract2::Request,
OpenInteract2::Response,
OpenInteract2::Controller).
.IP "\(bu" 4
Subclass of OpenInteract2::Request to take
the parameters, cookies, and other user information from the user's
request and put it into the OpenInteract2 framework.
.IP "\(bu" 4
Subclass of OpenInteract2::Response to take
the generated headers, cookies, and content generated by OpenInteract2
and send it back to the client.
.PP
Since most of the functionality is pushed down into the Request and
Response subclasses, adapters are generally pretty simple. For
instance, here's an example of the Adapter for Apache 1.x/mod_perl
1.x:
.PP
.Vb 1
\& package Apache::OpenInteract2;
\&
\& use strict;
\& use OpenInteract2::Auth;
\& use OpenInteract2::Request;
\& use OpenInteract2::Response;
\&
\& sub handler($$) {
\&     my ( $class, $r ) = @_;
\&     my $response = OpenInteract2::Response\->new({ apache => $r });
\&     my $request  = OpenInteract2::Request\->new({ apache => $r });
\&     OpenInteract2::Auth\->login( $r\->pnotes( \*(Aqlogin_user\*(Aq ) );
\&     my $controller = eval {
\&         OpenInteract2::Controller\->new( $request, $response )
\&     };
\&     if ( $@ ) {
\&         $response\->content( $@ );
\&     }
\&     else {
\&         $controller\->execute;
\&     }
\&     $response\->send;
\&     return $response\->status;
\& }
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
OpenInteract Wiki
.PP
<http://openinteract.sourceforge.net/cgi\-bin/twiki/view/OI/>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2002\-2005 Chris Winters. All rights reserved.
.SH "AUTHORS"
.IX Header "AUTHORS"
Chris Winters <chris@cwinters.com>
