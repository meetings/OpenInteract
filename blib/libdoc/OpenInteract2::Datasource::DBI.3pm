.\" Automatically generated by Pod::Man 2.1801 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "OpenInteract2::Datasource::DBI 3"
.TH OpenInteract2::Datasource::DBI 3 "2010-06-17" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
OpenInteract2::Datasource::DBI \- Create DBI database handles
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& # Define the parameters for a database handle \*(Aqmain\*(Aq using PostgreSQL
\& 
\& [datasource main]
\& type          = DBI
\& dbi_type      = Pg
\& dsn           = dbname=urkelweb
\& username      = webuser
\& password      = urkelnut
\& 
\& # Define a handle \*(Aqwin32\*(Aq that uses Microsoft SQL Server and connects
\& # with ODBC
\& 
\& [datasource win32]
\& type          = DBI
\& dbi_type      = MSSQL
\& use_odbc      = yes
\& dsn           = MyDSN
\& username      = webuser
\& password      = urkelnut
\& 
\& # Request the datasource \*(Aqmain\*(Aq from the context object (which in
\& # turn requests it from the OpenInteract2::DatasourceManager object,
\& # which in turn requests it from this class)
\& 
\& my $dbh = CTX\->datasource( \*(Aqmain\*(Aq );
\& my $sth = $dbh\->prepare( "SELECT * FROM urkel_fan" );
\& $sth\->execute;
\& ...
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
No, we do not subclass \s-1DBI\s0 with this. No, we do not override any of
the \s-1DBI\s0 methods. Instead, we provide the means to connect to the
database from one location using nothing more than a datasource
name. This is somewhat how the Java Naming and Directory Interface
(\s-1JNDI\s0) allows you to manage objects, including database connections.
.PP
Note that if you are using it this should work flawlessly (although
pointlessly) with Apache::DBI, and if you are using this
on a different persistent Perl platform (say, PerlEx) then this module
gives you a single location from which to retrieve database handles \*(--
this makes using the \s-1BEGIN/END\s0 tricks ActiveState recommends in their
\&\s-1FAQ\s0 pretty trivial.
.SH "METHODS"
.IX Header "METHODS"
\&\fBconnect( \f(CB$datasource_name\fB, \e%datasource_info )\fR
.PP
Returns: A \s-1DBI\s0 database handle with the following parameters set:
.PP
.Vb 6
\& RaiseError:  1
\& PrintError:  0
\& ChopBlanks:  1
\& AutoCommit:  1 (for now...)
\& LongReadLen: 32768 (or from \*(Aqlong_read_len\*(Aq of \e%datasource_info)
\& LongTruncOk: 0     (or from \*(Aqlong_trunc_ok\*(Aq of \e%datasource_info)
.Ve
.PP
The parameter \f(CW\*(C`\e%datasource_info\*(C'\fR defines how we connect to the
database and is pulled from your 'datasource.$name' server
configuration.
.IP "\(bu" 4
\&\fBdsn\fR ($)
.Sp
The last part of a fully-formed \s-1DBI\s0 data source name used to
connect to this database. Examples:
.Sp
.Vb 2
\& Full DBI DSN:     DBI:mysql:webdb
\& OpenInteract DSN: webdb
\& 
\& Full DBI DSN:     DBI:Pg:dbname=web
\& OpenInteract DSN: dbname=web
\& 
\& Full DBI DSN:     DBI:Sybase:server=SYBASE;database=web
\& OpenInteract DSN: server=SYBASE;database=web
\& 
\& Full DBI DSN:     DBI:ODBC:MyDSN
\& OpenInteract DSN: MyDSN
.Ve
.Sp
So the OpenInteract \s-1DSN\s0 string only includes the database-specific items
for \s-1DBI\s0, the third entry in the colon-separated string. This third
item is generally separated by semicolons and usually specifies a
database name, hostname, packet size, protocol version, etc. See your
\&\s-1DBD\s0 driver for what to do.
.IP "\(bu" 4
\&\fBdbi_type\fR ($)
.Sp
What database type are you using?  Available values are: 'MySQL',
\&'Pg', 'Sybase', 'ASAny', 'Oracle', 'SQLite' and '\s-1MSSQL\s0'.
.IP "\(bu" 4
\&\fBusername\fR ($)
.Sp
What username should we use to login to this database?
.IP "\(bu" 4
\&\fBpassword\fR ($)
.Sp
What password should we use in combination with the username to login
to this database?
.IP "\(bu" 4
\&\fBuse_odbc\fR (yes/no; default no)
.Sp
Whether to use \s-1ODBC\s0 as a \s-1DBI\s0 driver.
.IP "\(bu" 4
\&\fBlong_read_len\fR ($) (optional)
.Sp
Set the \f(CW\*(C`LongReadLen\*(C'\fR value for the database handle (See \s-1DBI\s0
for information on what this means.) If not set this defaults to
32768.
.IP "\(bu" 4
\&\fBlong_trunc_ok\fR (bool) (optional)
.Sp
Set the \f(CW\*(C`LongTruncOk\*(C'\fR value for the database handle (See \s-1DBI\s0
for information on what this means.) If not set this defaults to false.
.IP "\(bu" 4
\&\fBtrace_level\fR ($) (optional)
.Sp
Use the \s-1DBI\s0 \f(CW\*(C`trace()\*(C'\fR method to output logging information for
all calls on a database handle. Default is '0', which is no
tracing. As documented by \s-1DBI\s0, the levels are:
.Sp
.Vb 8
\&    0 \- Trace disabled.
\&    1 \- Trace DBI method calls returning with results or errors.
\&    2 \- Trace method entry with parameters and returning with results.
\&    3 \- As above, adding some high\-level information from the driver
\&        and some internal information from the DBI.
\&    4 \- As above, adding more detailed information from the driver.
\&        Also includes DBI mutex information when using threaded Perl.
\&    5 and above \- As above but with more and more obscure information.
.Ve
.PP
Any errors encountered will throw an exception, usually of the
OpenInteract2::Exception::Datasource
variety.
.PP
\&\fBresolve_datasource_info( \f(CB$name\fB, \e%datasource_info )\fR
.PP
Internal method used to resolve some shortcuts we allow for
usability. This will look at the 'dbi_type' and add keys to the
datasource information:
.IP "\fBspops\fR" 4
.IX Item "spops"
Lists the \s-1SPOPS\s0 class to use.
.IP "\fBdriver_name\fR" 4
.IX Item "driver_name"
Lists the \s-1DBI\s0 driver name to use \*(-- this is what you'd use in the
second ':' place in the \s-1DBI\s0 \f(CW\*(C`connect()\*(C'\fR call.
.PP
Returns a new hashref of information. For backwards compatibility, if
we see the key \f(CW\*(C`spops\*(C'\fR in \f(CW\*(C`\e%datasource_info\*(C'\fR we just return a new
hashref with the same data.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
OpenInteract2::Exception::Datasource
.PP
Apache::DBI
.PP
\&\s-1DBI\s0 \- http://www.symbolstone.org/technology/perl/DBI
.PP
PerlEx \- http://www.activestate.com/Products/PerlEx/
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2002\-2005 Chris Winters. All rights reserved.
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "AUTHORS"
.IX Header "AUTHORS"
Chris Winters <chris@cwinters.com>
