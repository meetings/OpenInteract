.\" Automatically generated by Pod::Man 2.1801 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "OpenInteract2::Manual::DataImport 3"
.TH OpenInteract2::Manual::DataImport 3 "2010-06-17" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
OpenInteract2::Manual::DataImport \- Importing Data into OpenInteract
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Many times you can use OpenInteract to frame an existing data source
with a web interface, and you can do this without any changes to the
datasource at all.
.PP
But sometimes you may need to bring data from somewhere else into a
datasource for use with OpenInteract. This short guide tells you how to
do that.
.SS "Data Import File"
.IX Subsection "Data Import File"
Data import files are used by OpenInteract to have a
datasource-independent way to install data. The format is fairly
simple: an arrayref with the first element being a hashref describing
what's to come, and then any number of arrayrefs containing actual
data to be installed. Here's a simple example that we use in
OpenInteract2 for themes:
.PP
.Vb 8
\& $theme = [
\&   { import_type => \*(Aqobject\*(Aq,
\&     spops_class => \*(AqOpenInteract2::Theme\*(Aq,
\&     field_order => [ qw/ theme_id title description parent
\&                          credit / ] },
\&   [ 1, \*(Aqmain\*(Aq, \*(AqYour basic, parent of all themes. Main.\*(Aq, 0,
\&     \*(AqOpenInteract Developers <info@openinteract.org>\*(Aq ],
\& ];
.Ve
.PP
So the first element in the \f(CW$theme\fR arrayref is a hashref with three
keys. The first key, \f(CW\*(C`import_type\*(C'\fR, tells the import process what
type of data it can expect. Most of the time you'll be specifying
\&\s-1SPOPS\s0 objects so you can leave this as 'object'. The second,
\&\f(CW\*(C`spops_class\*(C'\fR, tells the installer what \fBtype\fR of object should be
created. The third key, \f(CW\*(C`field_order\*(C'\fR, describes how the succeeding
data arrayrefs get mapped to fields in the object.
.PP
Other information you can use in the initial hashref:
.IP "\(bu" 4
\&\fBtransform_default\fR \f(CW\*(C`(\e@)\*(C'\fR
.Sp
Specify a list of fields for which we need to use the value specified
lookup as a lookup in the 'default_objects' server configuration key.
This is often used when specifying security \*(-- if you are using \s-1LDAP\s0,
then your group \s-1ID\s0 is soemething like 'site admin' rather than '3', so
you want to ensure that the security is set appropriately.
.IP "\(bu" 4
\&\fBtransform_now\fR \f(CW\*(C`(\e@)\*(C'\fR
.Sp
Specify a list of fields for which we need to set the value to a date
string representing right now.
.PP
Learn more about this whole process by reading the docs for
OpenInteract2::SQLInstall.
.PP
The easiest way to build an import file is to open an existing one and
edit what you need in the initial hashref item. The data record
arrayrefs are easily generated by some automated means \*(-- you could
even use Data::Dumper if you were so inclined.
.PP
The import file can then be run using oi_manage:
.PP
.Vb 4
\& $ export OPENINTERACT2=/path/to/mysite
\& $ oi2_manage install_sql \-\-package=mypackage
\&    # ALT: just run data import, no structures
\& $ oi2_manage install_sql_data \-\-package=mypackage
.Ve
.SS "Setting Security on the Data"
.IX Subsection "Setting Security on the Data"
If you're not using per-object security on your data, then you can skip
this section \*(-- you're done!
.PP
If you need to set security, there's a script that will do just about
everything you need. It comes with the 'base_security' package and is
located in its \f(CW\*(C`script/\*(C'\fR directory. For example, here's a run that
gives \s-1WRITE\s0 permission to the group with \s-1ID\s0 3 (usually the 'site
admin' group):
.PP
.Vb 2
\& $ export OPENINTERACT2=/path/to/mysite
\& $ oi2_manage create_security \-\-spops=news \-\-level=write \-\-scope=group \-\-scope_id=3
.Ve
.PP
To learn more about its operation see
OpenInteract2::Manage::Website::CreateSecurity.
.PP
If you need to setup security to distribute along with your package,
follow one of the examples as distributed with OpenInteract, such as in
the 'base_theme' or 'base_group' packages.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2002\-2005 Chris Winters. All rights reserved.
.SH "AUTHORS"
.IX Header "AUTHORS"
Chris Winters <chris@cwinters.com>
