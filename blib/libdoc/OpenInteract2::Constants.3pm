.\" Automatically generated by Pod::Man 2.1801 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "OpenInteract2::Constants 3"
.TH OpenInteract2::Constants 3 "2010-06-17" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
OpenInteract2::Constants \- Define codes used throughout OpenInteract
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& # Just bring in a couple
\& 
\& use OpenInteract2::Constants qw( OI_OK OI_ERROR LOG_ACTION );
\& 
\& # Bring in all OI status constants
\& 
\& use OpenInteract2::Constants qw( :oi );
\& 
\& # Bring in all logging constants
\& 
\& use OpenInteract2::Constants qw( :log );
\& 
\& # Open the gates, bring them all in
\& 
\& use OpenInteract2::Constants qw( :all );
\& 
\& # Using constants when generating content
\& 
\& sub blah {
\&   return ( "I\*(Aqm the man!", OI_OK );
\& }
\& 
\& sub barf {
\&   return ( "So it goes, I\*(Aqve failed", OI_ERROR );
\& }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module defines constants used throughout OpenInteract. Most often
you will see the various status constants returned from actions that
generate content.
.SS "Logging Constants"
.IX Subsection "Logging Constants"
The different logging levels are listed below in order from highest to
lowest. The low levels include all other levels above them. See
OpenInteract2::Context for how the different
levels are used in conjunction with the \f(CW\*(C`log()\*(C'\fR method of the context
object.
.PP
\&\fB\s-1LALL\s0\fR
.PP
The \f(CW\*(C`LALL\*(C'\fR level has the highest possible rank and is intended to turn
on all logging.
.PP
\&\fB\s-1LDEBUG\s0\fR
.PP
The \f(CW\*(C`LDEBUG\*(C'\fR level designates fine-grained informational events that
are most useful to debug an application.
.PP
\&\fB\s-1LINFO\s0\fR
.PP
The \f(CW\*(C`LINFO\*(C'\fR level designates informational messages that highlight
the progress of the application at coarse-grained level.
.PP
\&\fB\s-1LWARN\s0\fR
.PP
The \f(CW\*(C`LWARN\*(C'\fR level designates potentially harmful situations.
.PP
\&\fB\s-1LERROR\s0\fR
.PP
The \f(CW\*(C`LERROR\*(C'\fR level designates error events that might still allow the
application to continue running.
.PP
\&\fB\s-1LFATAL\s0\fR
.PP
The \f(CW\*(C`LFATAL\*(C'\fR level designates very severe error events that will
presumably lead the application to abort.
.PP
\&\fB\s-1LOFF\s0\fR
.PP
The \f(CW\*(C`LOFF\*(C'\fR level has the lowest possible rank and is intended to
turn off logging.
.SS "File Constants"
.IX Subsection "File Constants"
These are default filenames and directories for various items in \s-1OI2:\s0
.PP
\&\fB\s-1BOOTSTRAP_CONF_DIR\s0\fR: This is the default directory under the website where
you can find the bootstrap configuration. This is normally 'conf'.
.PP
\&\fB\s-1BOOTSTRAP_CONF_FILE\s0\fR: This is the default filename for the
bootstrap configuration. It is normally 'bootstrap.ini'.
.SS "Template Keys"
.IX Subsection "Template Keys"
Agreed-upon strings used for storing standard items in template
variables.
.PP
\&\fB\s-1ACTION_KEY\s0\fR: Retrieve the action spawning this generation request
.PP
\&\fB\s-1REQUEST_KEY\s0\fR: Retrieve the OpenInteract2::Request object
.PP
\&\fB\s-1RESPONSE_KEY\s0\fR: Retrieve the OpenInteract2::Response object
.PP
\&\s-1TODO:\s0 Do we need request/response?
.SH "METHODS"
.IX Header "METHODS"
None, just exported constants.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2001\-2005 Chris Winters. All rights reserved.
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "AUTHORS"
.IX Header "AUTHORS"
Chris Winters <chris@cwinters.com>
