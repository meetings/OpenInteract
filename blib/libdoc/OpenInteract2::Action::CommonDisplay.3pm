.\" Automatically generated by Pod::Man 2.1801 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "OpenInteract2::Action::CommonDisplay 3"
.TH OpenInteract2::Action::CommonDisplay 3 "2010-06-17" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
OpenInteract2::Action::CommonDisplay \- Task to display an object
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& # Just subclass and the task \*(Aqdisplay\*(Aq is implemented
\& 
\& package OpenInteract2::Action::MyAction;
\& 
\& use base qw( OpenInteract2::Action::CommonDisplay );
\& 
\& # Relevant configuration entries in your action.ini
\& 
\& [myaction]
\& ...
\& c_object_type                = myobject
\& c_display_template           = mypkg::detail
\& c_display_fail_task          = mypkg::display_error
\& c_display_active_field       = is_active
.Ve
.SH "SUPPORTED TASKS"
.IX Header "SUPPORTED TASKS"
This common action supports the following tasks:
.PP
\&\fBdisplay\fR \- Display a non-editable object.
.SH "DESCRIPTION FOR 'display'"
.IX Header "DESCRIPTION FOR 'display'"
The 'display' task simply retrieves a specified object and sends it to
a template. If the object checks its active status we first do that,
but we do not really do too much.
.SH "TEMPLATES USED FOR 'display'"
.IX Header "TEMPLATES USED FOR 'display'"
\&\fBc_display_template\fR (no default)
.PP
This it the template we send the object to. The same object can be
found in two keys: 'object' and whatever you have set \f(CW\*(C`c_object_type\*(C'\fR
to. So a handler manipulating 'doodad' objects will find the specified
doodad in 'object' and 'doodad'.
.SH "METHODS FOR 'display'"
.IX Header "METHODS FOR 'display'"
\&\f(CW\*(C`_display_customize( \e%template_params )\*(C'\fR
.PP
Called just before we generate the content. You can add parameters to
\&\f(CW\*(C`\e%template_params\*(C'\fR so your template will see them.
.SH "CONFIGURATION FOR 'display'"
.IX Header "CONFIGURATION FOR 'display'"
These are in addition to the template parameters defined above.
.SS "Basic"
.IX Subsection "Basic"
\&\fBc_object_type\fR ($) (\s-1REQUIRED\s0)
.PP
\&\s-1SPOPS\s0 key for object you will be displaying.
.PP
\&\fBc_display_fail_task\fR ($)
.PP
Task to run if we fail to fetch the object.
.PP
Default: 'common_error'
.PP
\&\f(CW\*(C`c_display_active_field\*(C'\fR ($)
.PP
If your object has a field indicating whether the object is active,
specify it here. If specified we check the object for true values
('y', 'yes', '1', 'true') \*(-- if none match, we pass control to the
\&\f(CW\*(C`c_display_fail_task\*(C'\fR.
.SS "System-created parameters"
.IX Subsection "System-created parameters"
\&\fBc_task\fR
.PP
Name of the task originally invoked: 'display'.
.PP
\&\fBc_object_class\fR ($)
.PP
\&\s-1SPOPS\s0 object class derived from \f(CW\*(C`c_object_type\*(C'\fR.
.PP
\&\f(CW\*(C`c_id_field\*(C'\fR ($)
.PP
\&\s-1ID\s0 field found from \f(CW\*(C`c_object_class\*(C'\fR.
.PP
\&\f(CW\*(C`c_id\*(C'\fR ($)
.PP
\&\s-1ID\s0 value used to fetch the object.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2002\-2005 Chris Winters. All rights reserved.
.SH "AUTHORS"
.IX Header "AUTHORS"
Chris Winters <chris@cwinters.com>
