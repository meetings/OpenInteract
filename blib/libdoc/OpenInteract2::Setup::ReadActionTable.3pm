.\" Automatically generated by Pod::Man 2.1801 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "OpenInteract2::Setup::ReadActionTable 3"
.TH OpenInteract2::Setup::ReadActionTable 3 "2010-06-17" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
OpenInteract2::Setup::ReadActionTable \- Reads actions from all packages and stores them in context
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\& my $setup = OpenInteract2::Setup\->new( \*(Aqread action table\*(Aq );
\& $setup\->run();
\& 
\& my $action_table = CTX\->action_table;
\& while ( my ( $name, $action_info ) = each ${ $action_table } ) {
\&     print "Action $name has data:\en", Dumper( $action_info ), "\en";
\& }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This setup action creates the action table. The action table holds all
configuration data for all actions and once it's created is stored in
the context. The action table is a hash with action names as keys and
their configuration data as a hashref of values.
.PP
To do this, first we:
.IP "\(bu" 4
Asks each package for its action file(s)
.IP "\(bu" 4
Reads in all actions from each file given.
.Sp
If we find an action name collision the last one read in wins, but we
log an 'error' message stating which one was overwritten and which
won.
.PP
For each action read in we do the following:
.IP "\(bu" 4
Store the action name in the property 'name'
.IP "\(bu" 4
Add to the action the package name ('package_name') and version
('package_version') it came from
.IP "\(bu" 4
Add to the action the path to the configuration file sourcing it
('package_config_file').
.PP
Once we read in all actions we:
.IP "\(bu" 4
Apply any global override rules.
.IP "\(bu" 4
Notify any configuration observers (see
OpenInteract2::Config::Initializer) with an observation of type
\&'action' and the action configuration hashref as arguments.
.IP "\(bu" 4
Assign the full set of action data to the context (using
\&\f(CW\*(C`action_table()\*(C'\fR).
.PP
Example, given a single action file with two actions:
.PP
.Vb 6
\& action.ini
\& \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\& [user]
\& class        = OpenInteract2::Handler::User
\& security     = no
\& default_task = search_form
\& 
\& [newuser]
\& class        = OpenInteract2::Handler::NewUser
\& error        = OpenInteract2::Error::User
\& security     = no
\& default_task = show
\& \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.Ve
.PP
This would result in an action table:
.PP
.Vb 10
\& user => {
\&    class                => \*(AqOpenInteract2::Handler::User\*(Aq,
\&    security             => \*(Aqno\*(Aq,
\&    default_task         => \*(Aqsearch_form\*(Aq,
\&    name                 => \*(Aquser\*(Aq,
\&    package_name         => \*(Aqbase_user\*(Aq,
\&    package_version      => 1.45,
\&    package_config_file  => \*(Aq/home/httpd/mysite/pkg/base_user\-1.45/conf/action.ini\*(Aq,
\& },
\& newuser => {
\&    class                => \*(AqOpenInteract2::Handler::NewUser\*(Aq,
\&    error                => \*(AqOpenInteract2::Error::User\*(Aq,
\&    security             => \*(Aqno\*(Aq,
\&    default_task         => \*(Aqshow\*(Aq
\&    name                 => \*(Aqnewuser\*(Aq,
\&    package_name         => \*(Aqbase_user\*(Aq,
\&    package_version      => 1.45,
\&    package_config_file  => \*(Aq/home/httpd/mysite/pkg/base_user\-1.45/conf/action.ini\*(Aq,
\&    author               => \*(AqChris Winters E<lt>chris@cwinters.comE<gt>\*(Aq,
\& },
.Ve
.SS "Setup Metadata"
.IX Subsection "Setup Metadata"
\&\fBname\fR \- 'read action table'
.PP
\&\fBdependencies\fR \- 'read packages'
.SH "SEE ALSO"
.IX Header "SEE ALSO"
OpenInteract2::Setup
.PP
OpenInteract2::Action
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2005 Chris Winters. All rights reserved.
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "AUTHORS"
.IX Header "AUTHORS"
Chris Winters <chris@cwinters.com>
