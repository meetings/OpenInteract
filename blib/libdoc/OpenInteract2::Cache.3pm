.\" Automatically generated by Pod::Man 2.1801 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "OpenInteract2::Cache 3"
.TH OpenInteract2::Cache 3 "2010-06-17" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
OpenInteract2::Cache \-\- Caches objects to avoid database hits and content to avoid template processing
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& # In $WEBSITE_DIR/conf/server.ini
\& 
\& [cache]
\& default_expire = 600
\& use            = 0
\& use_spops      = 0
\& class          = OpenInteract2::Cache::File
\& directory      = /path/to/cache
\& max_size       = 2000000
\& 
\& # Use implicitly with built\-in content caching
\& 
\& sub listing {
\&     my ( $self ) = @_;
\&     return $self\->generate_content(
\&                         \e%params, { name => \*(Aqmypkg::listing\*(Aq } );
\& }
\& 
\& # Explicitly expire a cached item
\& 
\& sub edit {
\&     my ( $self ) = @_;
\&     ...
\&     eval { $object\->save };
\&     if ( $@ ) {
\&         # set error message
\&     }
\&     else {
\&         CTX\->cache\->clear({ key => \*(Aqmypkg::myhandler::listing\*(Aq });
\&     }
\& }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This class is the base class for different caching implementations,
which are themselves just wrappers around various \s-1CPAN\s0 modules which
do the actual work. As a result, the module is pretty simple.
.PP
The only tricky aspect is that we use this for caching content and for
caching \s-1SPOPS\s0 objects. So there is some additional data checking not
normally in such a module.
.SH "METHODS"
.IX Header "METHODS"
These are the methods for the cache. The following parameters are
passed to every method that operates on an individual cached
item. Either 'key' or 'class' and 'object_id' are required for these
methods.
.IP "\(bu" 4
\&\fBkey\fR: Name under which we store data
.IP "\(bu" 4
\&\fBclass\fR: Class of \s-1SPOPS\s0 object
.IP "\(bu" 4
\&\fBobject_id\fR: \s-1ID\s0 of \s-1SPOPS\s0 object
.PP
\&\fBget( \e%params )\fR
.PP
Returns the data in the cache associated with a key; undef if data
corresponding to the key is not found.
.PP
\&\fBset( \e%params )\fR
.PP
Saves the data found in the \f(CW\*(C`data\*(C'\fR parameter into the cache,
referenced by the key \f(CW\*(C`key\*(C'\fR. If \f(CW\*(C`data\*(C'\fR is an \s-1SPOPS\s0 object we create
a key from its class and \s-1ID\s0.
.PP
Parameters:
.IP "\(bu" 4
\&\fBdata\fR: The data to save in the cache. This can be an \s-1SPOPS\s0 object,
\&\s-1HTML\s0 content or any cacheable Perl data structure. (Don't try to store
database handles, filehandles, or any other object with 'live'
connections to real-world resources.)
.IP "\(bu" 4
\&\fBexpire\fR (optional): Time the item should sit in the cache before being
refreshed. This can be in seconds (the default) or in the \*(L"[number]
[unit]\*(R" format outlined by Cache::Cache. For example,
\&'10 minutes'.
.PP
Returns a true value if successful.
.PP
\&\fBclear( \e%params )\fR
.PP
Invalidates the cache for the specified item.
.PP
\&\fB\f(BIpurge()\fB\fR
.PP
Clears the cache of all items.
.SH "SUBCLASS METHODS"
.IX Header "SUBCLASS METHODS"
These are the methods that must be overridden by a subclass to
implement caching.
.PP
\&\fBinitialize( \e%OpenInteract2::Config )\fR
.PP
This method is called object is first created. Use it to define and
return the object that actually does the caching. It will be passed to
all successive methods (\f(CW\*(C`get_data()\*(C'\fR, \f(CW\*(C`set_data()\*(C'\fR, etc.).
.PP
Relevant keys in the OpenInteract2::Config
object passed in:
.PP
.Vb 2
\& cache_info.default_expire \- Default expiration time for items
\& cache_info.max_size       \- Maximum size (in bytes) of cache
.Ve
.PP
\&\fBget_data( \f(CB$cache_object\fB, \f(CB$key\fB )\fR
.PP
Returns an object if it is cached and 'fresh', however that
implementation defines fresh.
.PP
\&\fBset_data( \f(CB$cache_object\fB, \f(CB$data\fB, \f(CB$key\fB, [ \f(CB$expires\fB ] )\fR
.PP
Returns 1 if successful, undef on failure. If \f(CW$expires\fR is undefined
or is not set to a valid Cache::Cache value, then the
configuration key 'cache_info.default_expire'.
.PP
\&\fBclear_data( \f(CB$cache_object\fB, \f(CB$key\fB )\fR
.PP
Removes the specified data from the cache. Returns 1 if successful,
undef on failure (or inability to do so).
.PP
\&\fBpurge_all( \f(CB$cache_object\fB )\fR
.PP
Clears the cache of all items.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2001\-2005 Chris Winters. All rights reserved.
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "AUTHORS"
.IX Header "AUTHORS"
Chris Winters <chris@cwinters.com>
