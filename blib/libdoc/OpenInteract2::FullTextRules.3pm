.\" Automatically generated by Pod::Man 2.1801 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "OpenInteract2::FullTextRules 3"
.TH OpenInteract2::FullTextRules 3 "2010-06-17" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
OpenInteract2::FullTextRules \- Rules for automatically indexing SPOPS objects
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\& # In object\*(Aqs spops.ini file tell OI2 you want your objects to be
\& # indexed; with this all \*(Aqsave()\*(Aq calls to the object will trigger
\& # the object\*(Aqs \*(Aqdescription\*(Aq and \*(Aqtitle\*(Aq fields being indexed.
\& 
\& [myobj]
\& is_searchable = yes
\& fulltext_field = description
\& fulltext_field = title
.Ve
.SH "METHODS"
.IX Header "METHODS"
.SS "\s-1SPOPS\s0 Ruleset"
.IX Subsection "SPOPS Ruleset"
\&\fBruleset_add( \f(CB$class\fB, \e%ruleset_table )\fR
.PP
Adds the necessary rules to the \f(CW$class\fR that puts this class in its
\&\s-1ISA\s0. Currently, these rules consist of:
.IP "\(bu" 4
\&\fBpost_save_action\fR: reindex this object \*(-- first obliterate all
references in the index, then build the references anew (called on
both INSERTs and UPDATEs)
.IP "\(bu" 4
\&\fBpost_remove_action\fR: remove all references to this object from the
index
.SS "Internal"
.IX Subsection "Internal"
\&\fB\f(BI_indexable_object_text()\fB\fR
.PP
Gets the text out of the object to index. Currently, we treat all text
from the object as one big field.
.PP
Note that if you have defined 'fulltext_pre_index_method' as a
configuration item in your class it is called before indexing. This is
useful if you have a method to fetch external data into your object.
.PP
\&\fB_tokenize( \f(CB$text\fB )\fR
.PP
Breaks text down into tokens. This process is very simple. First we
break the text into words, then we lower case each word, then we
\&'stem' each word. Here is a brief description of stemming:
.PP
.Vb 11
\& Truncation \- Also referred to as "root/suffix management" or
\& "Stemming" or "Word Stemming", truncation allows some search engines
\& to recognize and shorten long words such as "plants" or "boating" to
\& their root words (or word stems) "plant" and "boat." This makes
\& searching for such words much easier because it is not necessary to
\& consider every permutation of that word when trying to find it.1 In a
\& search, the ability to enter the first part of a keyword, insert a
\& symbol (usually *), and accept any variant spellings or word endings,
\& from the occurrence of the symbol forward (e.g., femini* retrieves
\& feminine, feminism, feminism, etc.).3 See also word variants, plurals
\& and singulars.
.Ve
.PP
(From: http://ollie.dcccd.edu/library/Module2/Books/concepts.htm)
.PP
We use the Lingua::Stem module for this, which
implements the \fIPorter algorithm\fR for stemming, as do most
implementations, apparently. (This is something that this class treats
as a black box itself :)
.PP
Parameters:
.IP "\(bu" 4
\&\fBtext\fR ($)
.Sp
Text to tokenize
.SH "SEE ALSO"
.IX Header "SEE ALSO"
OpenInteract2::FullTextIndexer in the 'full_text' package
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2004\-2005 Chris Winters. All rights reserved.
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "AUTHORS"
.IX Header "AUTHORS"
Chris Winters <chris@cwinters.com>
