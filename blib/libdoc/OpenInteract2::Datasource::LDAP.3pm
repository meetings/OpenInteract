.\" Automatically generated by Pod::Man 2.1801 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "OpenInteract2::Datasource::LDAP 3"
.TH OpenInteract2::Datasource::LDAP 3 "2010-06-17" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
OpenInteract2::Datasource::LDAP \- Centralized connection location to LDAP directories
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& # Define the parameters for an LDAP connection called \*(Aqprimary\*(Aq
\&
\& [datasource primary]
\& type          = LDAP
\& host          = localhost
\& port          = 389
\& base_dn       = dc=mycompany, dc=com
\& timeout       = 120
\& version       = 2
\& sasl          =
\& debug         =
\& bind_dn       = cn=webuser, ou=People, dc=mycompany, dc=com
\& bind_password = urkelnut
\& perform_bind  = yes
\& 
\& # Request the datasource \*(Aqprimary\*(Aq from the $OP object
\& 
\& my $ldap = CTX\->datasource( \*(Aqprimary\*(Aq );
\& my $mesg =  $ldap\->search( "urkelFan=yes" );
\& ...
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Connect and/or bind to an \s-1LDAP\s0 directory.
.SH "METHODS"
.IX Header "METHODS"
\&\fBconnect( \f(CB$datasource_name\fB, \e%datasource_info )\fR
.PP
Parameters used in \f(CW\*(C`\e%datsource_info\*(C'\fR
.IP "\(bu" 4
\&\fBhost\fR: host \s-1LDAP\s0 server is running on
.IP "\(bu" 4
\&\fBport\fR: defaults to 389
.IP "\(bu" 4
\&\fBdebug\fR: see Net::LDAP for what this will do
.IP "\(bu" 4
\&\fBtimeout\fR: defaults to 120
.IP "\(bu" 4
\&\fBversion\fR: defaults to 2; version of the \s-1LDAP\s0 protocol to use.
.IP "\(bu" 4
\&\fBperform_bind\fR: if true, we perform a bind (using 'bind_dn' and
\&'bind_password') when we connect to the \s-1LDAP\s0 directory
.IP "\(bu" 4
\&\fBbind_dn\fR: \s-1DN\s0 to bind with (if requested to bind)
.IP "\(bu" 4
\&\fBbind_password\fR: password to bind with (if requested to bind)
.IP "\(bu" 4
\&\fBsasl\fR: if true, use \s-1SASL\s0 when binding (if requested to bind)
.PP
Returns: a Net::LDAP connection. If there is an error we
throw an exception of the
OpenInteract2::Exception::Datasource
variety.
.PP
\&\fBbind( \f(CB$ldap_connection\fB, \e%bind_params )\fR
.PP
Bind an \s-1LDAP\s0 connection using a DN/password combination. With many
servers, you can do this more than once with a single connection.
.PP
Parameters used:
.IP "\(bu" 4
\&\fBbind_dn\fR: \s-1DN\s0 to bind as.
.IP "\(bu" 4
\&\fBbind_password\fR: Password to use when binding.
.IP "\(bu" 4
\&\fBsasl\fR: If set to true, use \s-1SASL\s0 for authentication. Note: this is
completely untested, and even if it works it only uses the \f(CW\*(C`CRAM\-MD5\*(C'\fR
method of authentication.
.PP
Returns: \s-1LDAP\s0 handle with \fIbind()\fR run, or throws an exception to
explain why it failed. An
OpenInteract2::Exception is thrown if a
resource could not be loaded, a
OpenInteract2::Exception::Datasource
is thrown if we could not perform the bind.
.PP
\&\fBconnect_and_bind( \e%connect_params, \e%other_params )\fR
.PP
Run both the \f(CW\*(C`connect()\*(C'\fR and \f(CW\*(C`bind()\*(C'\fR methods.
.SH "TO DO"
.IX Header "TO DO"
This hasn't been tested yet. (Got an \s-1LDAP\s0 server/setup handy?)
.SH "SEE ALSO"
.IX Header "SEE ALSO"
OpenInteract2::Exception::Datasource
.PP
Net::LDAP
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2002\-2005 Chris Winters. All rights reserved.
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "AUTHORS"
.IX Header "AUTHORS"
Chris Winters <chris@cwinters.com>
