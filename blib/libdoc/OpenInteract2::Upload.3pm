.\" Automatically generated by Pod::Man 2.1801 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "OpenInteract2::Upload 3"
.TH OpenInteract2::Upload 3 "2010-06-17" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
OpenInteract2::Upload \- Represent a file upload
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& my $request = OpenInteract2::Request\->get_current;
\&
\& # Get the upload as listed under \*(Aqinput_file\*(Aq
\& my $upload = $request\->upload( \*(Aqinput_file\*(Aq );
\&
\& # Get information about the upload
\& print "Filename: ", $upload\->filename, "\en",
\&       "Cleaned filename: ", $upload\->clean_filename( $upload\->filename ), "\en",
\&       "Size: ", $upload\->size, " bytes\en",
\&       "Content\-type: ", $upload\->content_type, "\en";
\&
\& # Dump the data uploaded to a file the long way...
\&
\& open( NEW, "> blah" ) || die "cannot open blah: $!";
\& my ( $data );
\& my $filehandle = $upload\->fh;
\& binmode NEW;
\& while ( read( $filehandle, $data, 1024 ) ) {
\&     print NEW $data;
\& }
\&
\& # ...or the short way
\&
\& $upload\->save_file;                  # use a cleaned up version of the
\&                                      # filename specified by the user
\& $upload\->save_file( \*(Aqnewname.foo\*(Aq ); # specify the filename yourself
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This class defines an object representing a generic uploaded file. The
OpenInteract2::Request subclasses must define
one of these objects for each file uploaded from the client.
.SH "METHODS"
.IX Header "METHODS"
.SS "Class Methods"
.IX Subsection "Class Methods"
\&\fBnew( \e%params )\fR
.PP
Defines a new upload object. The \f(CW\*(C`\e%params\*(C'\fR can be one or more of the
\&\s-1PROPERTIES\s0.
.PP
\&\fBbase_filename( \f(CB$filename\fB )\fR
.PP
Removes any leading directories from \f(CW\*(C`filename\*(C'\fR. Web clients will
frequently include the full path when sending an uploaded file, which
is useless. This is called automatically when you call the
\&\f(CW\*(C`filename()\*(C'\fR set method.
.PP
\&\fBclean_filename( \f(CB$filename\fB )\fR
.PP
Removes a number of 'bad' characters from \f(CW\*(C`filename\*(C'\fR. This is not
called automatically.
.SS "Object Methods"
.IX Subsection "Object Methods"
\&\fBsave_file( [ \f(CB$filename\fB ] )\fR
.PP
Saves the filehandle associated with this upload object to
\&\f(CW$filename\fR. An exception is thrown if \f(CW$filename\fR is outside
\&\f(CW$website_dir\fR or if there is an error writing the file.
.PP
You can leave off \f(CW$filename\fR and OpenInteract will save the file to
the 'upload' directory set in your server configuration. This
directory must be writeable by the process the server runs under.
.PP
See OpenInteract2::File for the heuristic used
for finding a filename to save the content.
.PP
Returns: the full path to the filename saved
.SH "PROPERTIES"
.IX Header "PROPERTIES"
All properties have a corresponding combined get/set method.
.PP
\&\fBname\fR: Name of the field that holds the uploaded file. If you are
using an \s-1HTML\s0 form to get the file from the client, this is the name
of the \s-1FILE\s0 field.
.PP
\&\fBfilename\fR: Name of the file as reported by the client. Note that
whenever you call the set method the value supplied is run through
\&\f(CW\*(C`base_filename()\*(C'\fR before being set into the object. (Alias: \f(CW\*(C`fh\*(C'\fR)
.PP
\&\fBfilehandle\fR: A filehandle reference suitable for reading the
uploaded file.
.PP
\&\fBcontent_type\fR: The \s-1MIME\s0 content type as reported by the client. (Be
warned: sometimes the client lies or is just plain ignorant.) (Alias:
\&\f(CW\*(C`type\*(C'\fR)
.PP
\&\fBsize\fR: The size of the uploaded file, in bytes.
.SH "BUGS"
.IX Header "BUGS"
None known.
.SH "TO DO"
.IX Header "TO DO"
Nothing known.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Apache::Request
.PP
\&\s-1CGI\s0
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2002\-2005 Chris Winters. All rights reserved.
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "AUTHORS"
.IX Header "AUTHORS"
Chris Winters <chris@cwinters.com>
