.\" Automatically generated by Pod::Man 2.1801 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "OpenInteract2::Config::GlobalOverride 3"
.TH OpenInteract2::Config::GlobalOverride 3 "2010-06-17" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
OpenInteract2::Config::GlobalOverride \-\- Process global override settings for a set of configuration directives
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& ## \-\-\-\-\-\-\-\-\-\-Sample of an override file\-\-\-\-\-\-\-\-\-\-
\& 
\& [Global]
\& override_type = spops
\& 
\& # Add a new value to \*(Aquser.track\*(Aq
\& 
\& [user.track.finalize]
\& action  = add
\& value   = 1
\& 
\& # Add two new entries to the ruleset for the \*(Aqnews\*(Aq object, giving
\& # the system a hint as to what type of data it should be
\& 
\& [news.rules_from]
\& action  = add
\& value   = OpenInteract2::RSSArticleSummarize
\& value   = OpenInteract2::EditorApproval
\& type    = list
\& 
\& # Remove \*(AqSPOPS::Secure\*(Aq from \*(Aqpage.isa\*(Aq list
\& 
\& [page.isa]
\& action  = remove
\& value   = SPOPS::Secure
\& 
\& # Remove key and value for \*(Aquid\*(Aq from \*(Aquser.field_map\*(Aq hash
\& 
\& [user.field_map]
\& action  = remove
\& value   = uid
\& 
\& # Remove the entire \*(Aqfield_alter\*(Aq hashref
\& [user.field_alter]
\& action  = remove
\& 
\& # Replace \*(AqSPOPS::DBI::MySQL with \*(AqSPOPS::DBI::Pg\*(Aq in all keys that
\& # have an \*(Aqisa\*(Aq entry
\& 
\& [*.isa]
\& action  = replace
\& replace = SPOPS::DBI::MySQL
\& value   = SPOPS::DBI::Pg
\& 
\& # Replace \*(AqSPOPS::DBI::MySQL with \*(AqSPOPS::DBI::Sybase\*(Aq in the
\& # \*(Aquser.isa\*(Aq list
\& 
\& [user.isa]
\& action  = replace
\& replace = SPOPS::DBI::MySQL
\& value   = SPOPS::DBI::Sybase
\& 
\& ## \-\-\-\-\-\-\-\-\-\-End sample override file\-\-\-\-\-\-\-\-\-\-
\&
\& ## Read in a configuration and apply the override file, saved for
\& ## this example in global_override.ini
\& 
\& my $config = OpenInteract2::Config\->new(
\&                         \*(Aqini\*(Aq, { filename => \*(Aqserver.ini\*(Aq } );
\& my $override_file = join( \*(Aq/\*(Aq, $config\->{dir}{config},
\&                                \*(Aqglobal_override.ini\*(Aq );
\& my $override = OpenInteract2::Config::GlobalOverride\->new({
\&     filename => $override_file });
\& $override\->apply_rules( $config );
\& 
\& ## Values in $config are now modified based on the given rules
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This class allows you to define a set of override rules and apply them
to a configuration. This is very helpful in OpenInteract because large
sections of the server configuration are pieced together from
information in a number of packages. Since there can be any number of
packages \*(-- at least 14, and most likely more \*(-- modifying each of
these is time-consuming and error-prone. Additionally, you need to
modify the configuration for a package every time you upgrade.
.PP
Instead of this hassle, you can now define rules in a single file that
will modify any configuration value. You have three ways to do this:
.IP "\(bu" 4
\&\fBadd\fR: Add/overwrite a value to an existing list or hash.
.IP "\(bu" 4
\&\fBremove\fR: Remove a particular value from a list, or delete a
hash key.
.IP "\(bu" 4
\&\fBreplace\fR: Replace a value with another in a list.
.SS "Action: Add"
.IX Subsection "Action: Add"
.SS "Action: Remove"
.IX Subsection "Action: Remove"
.SS "Action: Replace"
.IX Subsection "Action: Replace"
.SH "METHODS"
.IX Header "METHODS"
.SS "Class Methods"
.IX Subsection "Class Methods"
\&\fBnew( \e%params )\fR
.PP
Accepted parameters are:
.IP "\(bu" 4
\&\fBfilename\fR: Filename with source of override configuration
.IP "\(bu" 4
\&\fBcontent\fR: Source of override configuration.
.SS "Object Methods"
.IX Subsection "Object Methods"
\&\fBapply_rules( \f(CB$config\fB )\fR
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2002\-2005 Chris Winters. All rights reserved.
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "AUTHORS"
.IX Header "AUTHORS"
Chris Winters <chris@cwinters.com>
