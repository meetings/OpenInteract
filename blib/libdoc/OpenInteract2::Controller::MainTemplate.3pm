.\" Automatically generated by Pod::Man 2.1801 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "OpenInteract2::Controller::MainTemplate 3"
.TH OpenInteract2::Controller::MainTemplate 3 "2010-06-17" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
OpenInteract2::Controller::MainTemplate \- Controller for content to be placed in a main template
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& # In server config
\& 
\& [controller tt\-template]
\& content_generator = TT
\& class             = OpenInteract2::Controller::MainTemplate
\& 
\& # In your action (not done often)
\& [myaction]
\& controller = tt\-template
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.SH "METHODS"
.IX Header "METHODS"
\&\fBadd_content_param( \f(CB$key\fB, \f(CB$value\fB )\fR
.PP
Adds a parameter to be passed to the main template. This is the
template the generated content will be placed into using the key
\&'content'. Any additional parameters you set here will also be passed
to the template.
.PP
For example, one key used in
OpenInteract2::Template::Plugin is
\&'title', which is used as the page title (in the <title> tag).
.PP
Returns: the value set.
.PP
\&\fBremove_content_param( \f(CB$key\fB )\fR
.PP
Deletes the parameter \f(CW$key\fR from those passed to the main template.
.PP
Returns: previously set value for \f(CW$key\fR
.PP
\&\fB\f(BIcontent_params()\fB\fR
.PP
Returns a hashref with all set content parameters.
.PP
\&\fBadd_template_param( \f(CB$key\fB, \f(CB$value\fB )\fR
.PP
Adds a parameter to be passed to the template processing engine. This
is \fBnot\fR passed to the template itself.
.PP
Returns: the value set
.PP
\&\fBremove_template_param( \f(CB$key\fB )\fR
.PP
Deletes the template (not content) parameter by the name of \f(CW$key\fR.
.PP
Returns: previously set value for \f(CW$key\fR
.PP
\&\fB\f(BItemplate_params()\fB\fR
.PP
Returns a hashref with all set template parameters
.SH "PROPERTIES"
.IX Header "PROPERTIES"
.SS "Template Properties"
.IX Subsection "Template Properties"
The following properties are \fB\s-1OPTIONAL\s0\fR. If neither is set the
controller will find the main template from the theme of the current
user and place the content into it.
.PP
\&\fBmain_template\fR \- Alternate template into which the content will be
placed using the key 'content'.
.PP
\&\fBno_template\fR \- Setting this to 'yes' tell the controller to return
the generated content rather than place it into a template. This is
useful for content destined for popup windows.
.PP
You can also specify a \s-1GET/POST\s0 parameter with this information: if
you pass 'no_template=yes' the controller will spot this and make the
template change for you. This is useful for popup windows and other
nonstandard displays.
.PP
If you find yourself doing this consistently rather than in special
cases you might also look into setting a different controller for that
action. Setting:
.PP
.Vb 2
\& [myaction]
\& controller = raw
.Ve
.PP
will tell OpenInteract2 to use the
OpenInteract2::Controller::Raw class
instead of this one. It just deposits the generated content in the
response, no fuss no muss.
.PP
\&\fBmain_template_key\fR \- This is the key used to find the main template
in the theme. It's only used if the \fBmain_template\fR property is
undefined. If this key isn't defined use use the key 'main_template'
by default. (\s-1TODO:\s0 Sort out template key foo from server config.)
.SH "SEE ALSO"
.IX Header "SEE ALSO"
OpenInteract2::Controller
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2002\-2005 Chris Winters. All rights reserved.
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "AUTHORS"
.IX Header "AUTHORS"
Chris Winters <chris@cwinters.com>
